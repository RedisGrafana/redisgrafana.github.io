{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Redis plug-ins for Grafana \u00b6 The Redis plug-ins for Grafana allow users to connect to the Redis databases and build dashboards in Grafana to easily monitor Redis and application data. Data Source can connect to any Redis database On-Premises or in the Cloud. Plug-ins are registered in the Grafana repository and available to Grafana , Grafana Enterprise and Grafana Cloud . Where Next? \u00b6 The Quickstart is the recommended starting point The Development page has more information how to build plugins The Configuration page explains how to configure Redis Data Source The Commands reference all supported commands There are predefined dashboards and recipes in the Dashboards page Quick Links \u00b6 Redis Data Source for Grafana Redis Application plug-in Docker images Learn More \u00b6 Introducing the Redis Data Source Plug-in for Grafana How to Use the New Redis Data Source for Grafana Plug-in 3 Real-Life Apps Built with Redis Data Source for Grafana Real-time observability with Redis and Grafana Contact Us \u00b6 If you have questions or feedback, or want to report an issue, here's where you can get in touch: Redis Data Source Issues Redis Application Issues Documentation updates License \u00b6 Redis plug-ins for Grafana are licensed under the Apache License Version 2.0 .","title":"Home"},{"location":"index.html#redis-plug-ins-for-grafana","text":"The Redis plug-ins for Grafana allow users to connect to the Redis databases and build dashboards in Grafana to easily monitor Redis and application data. Data Source can connect to any Redis database On-Premises or in the Cloud. Plug-ins are registered in the Grafana repository and available to Grafana , Grafana Enterprise and Grafana Cloud .","title":" Redis plug-ins for Grafana"},{"location":"index.html#where-next","text":"The Quickstart is the recommended starting point The Development page has more information how to build plugins The Configuration page explains how to configure Redis Data Source The Commands reference all supported commands There are predefined dashboards and recipes in the Dashboards page","title":"Where Next?"},{"location":"index.html#quick-links","text":"Redis Data Source for Grafana Redis Application plug-in Docker images","title":"Quick Links"},{"location":"index.html#learn-more","text":"Introducing the Redis Data Source Plug-in for Grafana How to Use the New Redis Data Source for Grafana Plug-in 3 Real-Life Apps Built with Redis Data Source for Grafana Real-time observability with Redis and Grafana","title":"Learn More"},{"location":"index.html#contact-us","text":"If you have questions or feedback, or want to report an issue, here's where you can get in touch: Redis Data Source Issues Redis Application Issues Documentation updates","title":"Contact Us"},{"location":"index.html#license","text":"Redis plug-ins for Grafana are licensed under the Apache License Version 2.0 .","title":"License"},{"location":"dashboards.html","text":"Work in Progress","title":"Dashboards"},{"location":"quickstart.html","text":"Quickstart \u00b6 Install using grafana-cli \u00b6 Use the grafana-cli tool to install from the commandline Redis Application plug-in and Redis Data Source: grafana-cli plugins install redis-app To install only Redis Data Source: grafana-cli plugins install redis-datasource Run using Docker \u00b6 To start up with installed Redis Application plug-in and Redis Data Source: docker run -d -p 3000 :3000 --name = grafana -e \"GF_INSTALL_PLUGINS=redis-app\" grafana/grafana To start up with installed Redis Data Source: docker run -d -p 3000 :3000 --name = grafana -e \"GF_INSTALL_PLUGINS=redis-datasource\" grafana/grafana Enable Redis Application plug-in \u00b6 Redis Application plug-in is disabled by default Go to Configuration -> Plugins and enable Redis Application plug-in. Configure Redis Data Source \u00b6 The Configuration page explains how to configure Redis Data Source Open Grafana in your browser and configure Redis Data Source. You can add as many data sources as you want to support multiple Redis databases.","title":"Quickstart"},{"location":"quickstart.html#quickstart","text":"","title":"Quickstart"},{"location":"quickstart.html#install-using-grafana-cli","text":"Use the grafana-cli tool to install from the commandline Redis Application plug-in and Redis Data Source: grafana-cli plugins install redis-app To install only Redis Data Source: grafana-cli plugins install redis-datasource","title":"Install using grafana-cli"},{"location":"quickstart.html#run-using-docker","text":"To start up with installed Redis Application plug-in and Redis Data Source: docker run -d -p 3000 :3000 --name = grafana -e \"GF_INSTALL_PLUGINS=redis-app\" grafana/grafana To start up with installed Redis Data Source: docker run -d -p 3000 :3000 --name = grafana -e \"GF_INSTALL_PLUGINS=redis-datasource\" grafana/grafana","title":"Run using Docker"},{"location":"quickstart.html#enable-redis-application-plug-in","text":"Redis Application plug-in is disabled by default Go to Configuration -> Plugins and enable Redis Application plug-in.","title":"Enable Redis Application plug-in"},{"location":"quickstart.html#configure-redis-data-source","text":"The Configuration page explains how to configure Redis Data Source Open Grafana in your browser and configure Redis Data Source. You can add as many data sources as you want to support multiple Redis databases.","title":"Configure Redis Data Source"},{"location":"development/redis-app.html","text":"Developing Redis Application plug-in for Grafana \u00b6 Developing Application plug-in involves setting up the development environment (which can be either Linux-based or macOS-based), building and running tests. Install Grafana \u00b6 Grafana can be used in Docker or installed locally Follow Installation to install and start Grafana Open Grafana in web-browser http://X.X.X.X:3000 Clone repository \u00b6 git clone https://github.com/RedisGrafana/grafana-redis-app.git Build Application \u00b6 Install the latest version of Node.js using Node Version Manager Install yarn globally npm install yarn -g Install dependencies yarn install Build Application yarn build Update local Grafana Configuration \u00b6 Move distribution to Grafana's plugins/ folder mv dist/ /var/lib/grafana/plugins/redis-app Add redis-app to allowed unsigned plugins vi /etc/grafana/grafana.ini [plugins] ;enable_alpha = false ;app_tls_skip_verify_insecure = false # Enter a comma-separated list of plugin identifiers to identify plugins that are allowed to be loaded even if they lack a valid signature. allow_loading_unsigned_plugins = redis-app Verify that plugin is registered tail -100 /var/log/grafana/grafana.log Start using Docker Compose \u00b6 Docker Compose should be pre-installed following documentation yarn start:dev Enable Redis Application plug-in \u00b6 Redis Application plug-in is disabled by default Go to Configuration -> Plugins and enable Redis Application plug-in. If you have questions, enhancement ideas or running into issues, please just open an issue","title":"Redis Application plug-in"},{"location":"development/redis-app.html#developing-redis-application-plug-in-for-grafana","text":"Developing Application plug-in involves setting up the development environment (which can be either Linux-based or macOS-based), building and running tests.","title":"Developing Redis Application plug-in for Grafana"},{"location":"development/redis-app.html#install-grafana","text":"Grafana can be used in Docker or installed locally Follow Installation to install and start Grafana Open Grafana in web-browser http://X.X.X.X:3000","title":"Install Grafana"},{"location":"development/redis-app.html#clone-repository","text":"git clone https://github.com/RedisGrafana/grafana-redis-app.git","title":"Clone repository"},{"location":"development/redis-app.html#build-application","text":"Install the latest version of Node.js using Node Version Manager Install yarn globally npm install yarn -g Install dependencies yarn install Build Application yarn build","title":"Build Application"},{"location":"development/redis-app.html#update-local-grafana-configuration","text":"Move distribution to Grafana's plugins/ folder mv dist/ /var/lib/grafana/plugins/redis-app Add redis-app to allowed unsigned plugins vi /etc/grafana/grafana.ini [plugins] ;enable_alpha = false ;app_tls_skip_verify_insecure = false # Enter a comma-separated list of plugin identifiers to identify plugins that are allowed to be loaded even if they lack a valid signature. allow_loading_unsigned_plugins = redis-app Verify that plugin is registered tail -100 /var/log/grafana/grafana.log","title":"Update local Grafana Configuration"},{"location":"development/redis-app.html#start-using-docker-compose","text":"Docker Compose should be pre-installed following documentation yarn start:dev","title":"Start using Docker Compose"},{"location":"development/redis-app.html#enable-redis-application-plug-in","text":"Redis Application plug-in is disabled by default Go to Configuration -> Plugins and enable Redis Application plug-in. If you have questions, enhancement ideas or running into issues, please just open an issue","title":"Enable Redis Application plug-in"},{"location":"development/redis-datasource.html","text":"Developing Redis Data Source for Grafana \u00b6 Developing Redis Data Source involves setting up the development environment (which can be either Linux-based or macOS-based), building and running tests. Install Grafana \u00b6 Grafana can be used in Docker or installed locally Follow Installation to install and start Grafana Open Grafana in web-browser http://X.X.X.X:3000 Clone repository \u00b6 git clone https://github.com/RedisGrafana/grafana-redis-datasource.git Build Data Source Frontend \u00b6 Install the latest version of Node.js using Node Version Manager Install yarn globally npm install yarn -g Install dependencies yarn install Build Data Source yarn build Build Data Source Backend \u00b6 Install Golang yum install go Install Grafana plugin SDK for Go dependency go get -u github.com/grafana/grafana-plugin-sdk-go Install mage (make-like build tool using Go) git clone https://github.com/magefile/mage cd mage go run bootstrap.go Build backend binaries for Linux, Windows and MacOS for ARM and AMD64 platforms yarn build:backend Update local Grafana Configuration \u00b6 Move distribution to Grafana's plugins/ folder mv dist/ /var/lib/grafana/plugins/redis-datasource Add redis-datasource to allowed unsigned plugins vi /etc/grafana/grafana.ini [plugins] ;enable_alpha = false ;app_tls_skip_verify_insecure = false # Enter a comma-separated list of plugin identifiers to identify plugins that are allowed to be loaded even if they lack a valid signature. allow_loading_unsigned_plugins = redis-datasource Verify that plugin registered tail -100 /var/log/grafana/grafana.log t=2020-07-01T06:03:38+0000 lvl=info msg=\"Starting plugin search\" logger=plugins t=2020-07-01T06:03:38+0000 lvl=warn msg=\"Running an unsigned backend plugin\" logger=plugins pluginID=redis-datasource pluginDir=/var/lib/grafana/plugins/redis-datasource t=2020-07-01T06:03:38+0000 lvl=info msg=\"Registering plugin\" logger=plugins name=redis-datasource t=2020-07-01T06:03:38+0000 lvl=info msg=\"HTTP Server Listen\" logger=http.server address=[::]:3000 protocol=http subUrl= socket= Start using Docker Compose \u00b6 Docker Compose should be pre-installed following documentation yarn start:dev Configure Redis Data Source \u00b6 The Configuration page explains how to configure Redis Data Source If you have questions, enhancement ideas or running into issues, please open an issue","title":"Redis Data Source"},{"location":"development/redis-datasource.html#developing-redis-data-source-for-grafana","text":"Developing Redis Data Source involves setting up the development environment (which can be either Linux-based or macOS-based), building and running tests.","title":"Developing Redis Data Source for Grafana"},{"location":"development/redis-datasource.html#install-grafana","text":"Grafana can be used in Docker or installed locally Follow Installation to install and start Grafana Open Grafana in web-browser http://X.X.X.X:3000","title":"Install Grafana"},{"location":"development/redis-datasource.html#clone-repository","text":"git clone https://github.com/RedisGrafana/grafana-redis-datasource.git","title":"Clone repository"},{"location":"development/redis-datasource.html#build-data-source-frontend","text":"Install the latest version of Node.js using Node Version Manager Install yarn globally npm install yarn -g Install dependencies yarn install Build Data Source yarn build","title":"Build Data Source Frontend"},{"location":"development/redis-datasource.html#build-data-source-backend","text":"Install Golang yum install go Install Grafana plugin SDK for Go dependency go get -u github.com/grafana/grafana-plugin-sdk-go Install mage (make-like build tool using Go) git clone https://github.com/magefile/mage cd mage go run bootstrap.go Build backend binaries for Linux, Windows and MacOS for ARM and AMD64 platforms yarn build:backend","title":"Build Data Source Backend"},{"location":"development/redis-datasource.html#update-local-grafana-configuration","text":"Move distribution to Grafana's plugins/ folder mv dist/ /var/lib/grafana/plugins/redis-datasource Add redis-datasource to allowed unsigned plugins vi /etc/grafana/grafana.ini [plugins] ;enable_alpha = false ;app_tls_skip_verify_insecure = false # Enter a comma-separated list of plugin identifiers to identify plugins that are allowed to be loaded even if they lack a valid signature. allow_loading_unsigned_plugins = redis-datasource Verify that plugin registered tail -100 /var/log/grafana/grafana.log t=2020-07-01T06:03:38+0000 lvl=info msg=\"Starting plugin search\" logger=plugins t=2020-07-01T06:03:38+0000 lvl=warn msg=\"Running an unsigned backend plugin\" logger=plugins pluginID=redis-datasource pluginDir=/var/lib/grafana/plugins/redis-datasource t=2020-07-01T06:03:38+0000 lvl=info msg=\"Registering plugin\" logger=plugins name=redis-datasource t=2020-07-01T06:03:38+0000 lvl=info msg=\"HTTP Server Listen\" logger=http.server address=[::]:3000 protocol=http subUrl= socket=","title":"Update local Grafana Configuration"},{"location":"development/redis-datasource.html#start-using-docker-compose","text":"Docker Compose should be pre-installed following documentation yarn start:dev","title":"Start using Docker Compose"},{"location":"development/redis-datasource.html#configure-redis-data-source","text":"The Configuration page explains how to configure Redis Data Source If you have questions, enhancement ideas or running into issues, please open an issue","title":"Configure Redis Data Source"},{"location":"redis-datasource/INFO.html","text":"Work in Progress","title":"INFO"},{"location":"redis-datasource/TS-RANGE.html","text":"Work in Progress","title":"TS.RANGE"},{"location":"redis-datasource/commands.html","text":"Redis Data Source supports \u00b6 Redis Commands (Hashes, Sets, Lists, Strings, Streams, etc.) \u00b6 CLIENT LIST - Returns information and statistics about the client connections server CLUSTER INFO - Provides INFO style information about Redis Cluster vital parameters CLUSTER NODES - Provides current cluster configuration, given by the set of known nodes GET - Returns the value of key HGET - Returns the value associated with field in the hash stored at key HGETALL - Returns all fields and values of the hash stored at key HKEYS - Returns all field names in the hash stored at key HLEN - Returns the number of fields contained in the hash stored at key HMGET - Returns the values associated with the specified fields in the hash stored at key INFO - Returns information and statistics about the server LLEN - Returns the length of the list stored at key TMSCAN (SCAN with Type and Memory Usage) - Returns keys with types and memory usage (CAUSE LATENCY) SCARD - Returns the set cardinality (number of elements) of the set stored at key SLOWLOG GET - Returns the Redis slow queries log SMEMBERS - Returns all the members of the set value stored at key TTL - Returns the string representation of the type of the value stored at key TYPE - Returns the string representation of the type of the value stored at key XINFO STREAM - Returns general information about the stream stored at the specified key XLEN - Returns the number of entries inside a stream XRANGE - Returns the stream entries matching a given range of IDs XREVRANGE - Returns the stream entries matching a given range of IDs in reverse order RedisTimeSeries (Time Series data structure) \u00b6 TS.GET - Returns the last sample TS.INFO - Returns information and statistics on the time-series TS.MRANGE - Query a timestamp range across multiple time-series by filters TS.QUERYINDEX - Query all the keys matching the filter list TS.RANGE - Query a range RedisGears (Dynamic framework for data processing) \u00b6 RG.DUMPREGISTRATIONS - Outputs the list of function registrations RG.PYSTATS - Returns memory usage statistics from the Python interpreter RedisGraph (Graph database) \u00b6 GRAPH.QUERY - Executes the given query against a specified graph GRAPH.SLOWLOG - Returns a list containing up to 10 of the slowest queries issued against the given graph ID RediSearch (Secondary Index & Query Engine) \u00b6 FT.INFO - Returns information and statistics on the index","title":"Supported commands"},{"location":"redis-datasource/commands.html#redis-data-source-supports","text":"","title":"Redis Data Source supports"},{"location":"redis-datasource/commands.html#redis-commands-hashes-sets-lists-strings-streams-etc","text":"CLIENT LIST - Returns information and statistics about the client connections server CLUSTER INFO - Provides INFO style information about Redis Cluster vital parameters CLUSTER NODES - Provides current cluster configuration, given by the set of known nodes GET - Returns the value of key HGET - Returns the value associated with field in the hash stored at key HGETALL - Returns all fields and values of the hash stored at key HKEYS - Returns all field names in the hash stored at key HLEN - Returns the number of fields contained in the hash stored at key HMGET - Returns the values associated with the specified fields in the hash stored at key INFO - Returns information and statistics about the server LLEN - Returns the length of the list stored at key TMSCAN (SCAN with Type and Memory Usage) - Returns keys with types and memory usage (CAUSE LATENCY) SCARD - Returns the set cardinality (number of elements) of the set stored at key SLOWLOG GET - Returns the Redis slow queries log SMEMBERS - Returns all the members of the set value stored at key TTL - Returns the string representation of the type of the value stored at key TYPE - Returns the string representation of the type of the value stored at key XINFO STREAM - Returns general information about the stream stored at the specified key XLEN - Returns the number of entries inside a stream XRANGE - Returns the stream entries matching a given range of IDs XREVRANGE - Returns the stream entries matching a given range of IDs in reverse order","title":"Redis Commands (Hashes, Sets, Lists, Strings, Streams, etc.)"},{"location":"redis-datasource/commands.html#redistimeseries-time-series-data-structure","text":"TS.GET - Returns the last sample TS.INFO - Returns information and statistics on the time-series TS.MRANGE - Query a timestamp range across multiple time-series by filters TS.QUERYINDEX - Query all the keys matching the filter list TS.RANGE - Query a range","title":"RedisTimeSeries (Time Series data structure)"},{"location":"redis-datasource/commands.html#redisgears-dynamic-framework-for-data-processing","text":"RG.DUMPREGISTRATIONS - Outputs the list of function registrations RG.PYSTATS - Returns memory usage statistics from the Python interpreter","title":"RedisGears (Dynamic framework for data processing)"},{"location":"redis-datasource/commands.html#redisgraph-graph-database","text":"GRAPH.QUERY - Executes the given query against a specified graph GRAPH.SLOWLOG - Returns a list containing up to 10 of the slowest queries issued against the given graph ID","title":"RedisGraph (Graph database)"},{"location":"redis-datasource/commands.html#redisearch-secondary-index-query-engine","text":"FT.INFO - Returns information and statistics on the index","title":"RediSearch (Secondary Index &amp; Query Engine)"},{"location":"redis-datasource/configuration.html","text":"Work in Progress","title":"Configuration"}]}