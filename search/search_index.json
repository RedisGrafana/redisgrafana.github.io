{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"intro/","text":"Introduction \u00b6 The Redis plug-ins for Grafana allow users to connect to the Redis databases and build dashboards in Grafana to observe and interact with Redis and Application data. Requirements Only Grafana 7.1+ with a new Backend plug-in platform supports Redis plug-ins. Where Next? \u00b6 The Quickstart is the recommended starting point. The Commands reference all supported commands in the Redis Data Source. The Redis Application plug-in page provides information about the Application pages, dashboards, and custom panels. The Redis Explorer plug-in page offers information about the Explorer pages, dashboards, and Redis Enterprise Software data source. The Development section has more details on the nightly built Docker Images , developing plug-ins, and compelling use cases. The Learn more page consists of links to the recent blog posts and video presentations. The Timeline page lists all significant dates and plans in the plug-in's development. Grafana Repository \u00b6 Plug-ins are registered in the Grafana repository and available to Grafana , Grafana Enterprise , and Grafana Cloud . Redis Data Source for Grafana Redis Application plug-in Redis Explorer plug-in is under review Contact Us \u00b6 Contribute To contribute your project or propose Documentation updates, open an issue or click the \"Edit this page\" button at the top to submit a Pull Request. If you have questions, feedback, or want to report an issue, here's where you can get in touch: Redis Data Source Redis Application plug-in Redis Explorer plug-in","title":"Introduction"},{"location":"intro/#introduction","text":"The Redis plug-ins for Grafana allow users to connect to the Redis databases and build dashboards in Grafana to observe and interact with Redis and Application data. Requirements Only Grafana 7.1+ with a new Backend plug-in platform supports Redis plug-ins.","title":"Introduction"},{"location":"intro/#where-next","text":"The Quickstart is the recommended starting point. The Commands reference all supported commands in the Redis Data Source. The Redis Application plug-in page provides information about the Application pages, dashboards, and custom panels. The Redis Explorer plug-in page offers information about the Explorer pages, dashboards, and Redis Enterprise Software data source. The Development section has more details on the nightly built Docker Images , developing plug-ins, and compelling use cases. The Learn more page consists of links to the recent blog posts and video presentations. The Timeline page lists all significant dates and plans in the plug-in's development.","title":"Where Next?"},{"location":"intro/#grafana-repository","text":"Plug-ins are registered in the Grafana repository and available to Grafana , Grafana Enterprise , and Grafana Cloud . Redis Data Source for Grafana Redis Application plug-in Redis Explorer plug-in is under review","title":"Grafana Repository"},{"location":"intro/#contact-us","text":"Contribute To contribute your project or propose Documentation updates, open an issue or click the \"Edit this page\" button at the top to submit a Pull Request. If you have questions, feedback, or want to report an issue, here's where you can get in touch: Redis Data Source Redis Application plug-in Redis Explorer plug-in","title":"Contact Us"},{"location":"learn-more/","text":"Learn More \u00b6 Date Title Published August 25, 2020 Introducing the Redis Data Source Plug-in for Grafana Redis Labs September 2, 2020 How to Use the New Redis Data Source for Grafana Plug-in Redis Labs September 28, 2020 3 Real-Life Apps Built with Redis Data Source for Grafana Redis Labs October 15, 2020 Grafana data streaming meets Redis Volkov Labs October 25, 2020 Observing Redis databases from Grafana Cloud for free Volkov Labs February 9, 2021 What is Redis CLI? Volkov Labs February 12, 2021 An easy to use monitoring solution for Redis Dev.to April 13, 2021 Forecasting Stocks and Crypto prices using Redis, Prophet, and Grafana Volkov Labs Presentations \u00b6 Elevate your Redis experience with Redis plugins for Grafana \u00b6 April 20-21, 2021 at RedisConf 2021 Redis Data Source and Application plug-ins enable users to connect to a Redis database and build dashboards in Grafana to easily observe Redis and application data. Elevate your Redis experience with custom dashboard panels that add Redis CLI, Latency Monitor, biggest keys, and other useful functionality. Real-time observability with Redis and Grafana \u00b6 October 26, 2020 at ObservabilityCON Do you want to learn how to combine Grafana streaming capabilities with interactivity to take Grafana beyond observability? In this session, you\u2019ll learn about the integration of Grafana and Redis, the most loved in-memory database. We will present 3 real-life applications built with Redis Data Source for Grafana. Additionally, we\u2019ll show you how to use the Redis Data Source and demonstrate the new Application plugin with custom panel and dashboards. Finally, we will touch on the new features of Grafana 7: data frames, transformations, and streaming.","title":"Learn More"},{"location":"learn-more/#learn-more","text":"Date Title Published August 25, 2020 Introducing the Redis Data Source Plug-in for Grafana Redis Labs September 2, 2020 How to Use the New Redis Data Source for Grafana Plug-in Redis Labs September 28, 2020 3 Real-Life Apps Built with Redis Data Source for Grafana Redis Labs October 15, 2020 Grafana data streaming meets Redis Volkov Labs October 25, 2020 Observing Redis databases from Grafana Cloud for free Volkov Labs February 9, 2021 What is Redis CLI? Volkov Labs February 12, 2021 An easy to use monitoring solution for Redis Dev.to April 13, 2021 Forecasting Stocks and Crypto prices using Redis, Prophet, and Grafana Volkov Labs","title":"Learn More"},{"location":"learn-more/#presentations","text":"","title":"Presentations"},{"location":"learn-more/#elevate-your-redis-experience-with-redis-plugins-for-grafana","text":"April 20-21, 2021 at RedisConf 2021 Redis Data Source and Application plug-ins enable users to connect to a Redis database and build dashboards in Grafana to easily observe Redis and application data. Elevate your Redis experience with custom dashboard panels that add Redis CLI, Latency Monitor, biggest keys, and other useful functionality.","title":"Elevate your Redis experience with Redis plugins for Grafana"},{"location":"learn-more/#real-time-observability-with-redis-and-grafana","text":"October 26, 2020 at ObservabilityCON Do you want to learn how to combine Grafana streaming capabilities with interactivity to take Grafana beyond observability? In this session, you\u2019ll learn about the integration of Grafana and Redis, the most loved in-memory database. We will present 3 real-life applications built with Redis Data Source for Grafana. Additionally, we\u2019ll show you how to use the Redis Data Source and demonstrate the new Application plugin with custom panel and dashboards. Finally, we will touch on the new features of Grafana 7: data frames, transformations, and streaming.","title":"Real-time observability with Redis and Grafana"},{"location":"quickstart/","text":"Quickstart \u00b6 Architecture \u00b6 The Redis plug-ins for the Grafana ecosystem build on top of the Redis Data Source. Install using grafana-cli \u00b6 Use the grafana-cli tool to install from the command line: Redis Application plug-in and Redis Data Source \u00b6 grafana-cli plugins install redis-app \"Redis Data Source \u00b6 grafana-cli plugins install redis-datasource Redis Explorer \u00b6 It is under review and will be available shortly. Run using Docker \u00b6 Login to Grafana The Default username and password to login to Grafana are admin / admin . Redis Application plug-in and Redis Data Source \u00b6 docker run -d -p 3000 :3000 --name = grafana -e \"GF_INSTALL_PLUGINS=redis-app\" grafana/grafana Redis Data Source \u00b6 docker run -d -p 3000 :3000 --name = grafana -e \"GF_INSTALL_PLUGINS=redis-datasource\" grafana/grafana Redis Explorer \u00b6 Available as Nightly build while under review. docker run -p 3000 :3000 --name = explorer ghcr.io/redisgrafana/redis-explorer:latest Docker Images Interested in the latest features and updates? Start nightly built Docker image . Install without Internet access \u00b6 Redis Data Source \u00b6 Download the latest version from Releases . Unzip an archive to the plugins/ folder for local Grafana installation or Docker's volume. Check permissions for the redis-datasource binaries: Permissions Redis Data Source binaries should have executable permissions for Grafana to execute them. % ls -lrt redis-datasource* -rwxr-xr-x 1 mikhail staff 13077504 Mar 20 11 :20 redis-datasource_windows_amd64.exe -rwxr-xr-x 1 mikhail staff 11796480 Mar 20 11 :20 redis-datasource_linux_arm64 -rwxr-xr-x 1 mikhail staff 10682368 Mar 20 11 :20 redis-datasource_linux_arm -rwxr-xr-x 1 mikhail staff 12644352 Mar 20 11 :20 redis-datasource_linux_amd64 -rwxr-xr-x 1 mikhail staff 13806272 Mar 20 11 :20 redis-datasource_darwin_amd64 Check that plug-in was registered: t = 2020 -07-01T06:03:38+0000 lvl = info msg = \"Starting plugin search\" logger = plugins t = 2020 -07-01T06:03:38+0000 lvl = warn msg = \"Running an unsigned backend plugin\" logger = plugins pluginID = redis-datasource pluginDir = /var/lib/grafana/plugins/redis-datasource t = 2020 -07-01T06:03:38+0000 lvl = info msg = \"Registering plugin\" logger = plugins name = redis-datasource t = 2020 -07-01T06:03:38+0000 lvl = info msg = \"HTTP Server Listen\" logger = http.server address =[ :: ] :3000 protocol = http subUrl = socket = Redis Application plug-in \u00b6 Download the latest version from Releases . Unzip an archive to the plugins/ folder for local Grafana installation or Docker's volume. Redis Explorer plug-in \u00b6 Dependencies Redis Explorer plug-in requires Redis Data Source and Redis Application plug-in. Download the latest version from Releases . Unzip an archive to the plugins/ folder for local Grafana installation or Docker's volume. Configuration \u00b6 Redis Data Source \u00b6 The Configuration page explains how to connect the data source to the Redis database. Redis Application plug-in \u00b6 The Overview page explains how to enable plug-in and manage Redis Data Sources. Redis Explorer plug-in \u00b6 The Overview page explains how to enable plug-in and manage Redis Enterprise Software Data Sources. Learn more \u00b6 Take a look at Learn More page to read recent blog posts and view presentations from conferences.","title":"Quickstart"},{"location":"quickstart/#quickstart","text":"","title":"Quickstart"},{"location":"quickstart/#architecture","text":"The Redis plug-ins for the Grafana ecosystem build on top of the Redis Data Source.","title":"Architecture"},{"location":"quickstart/#install-using-grafana-cli","text":"Use the grafana-cli tool to install from the command line:","title":"Install using grafana-cli"},{"location":"quickstart/#redis-application-plug-in-and-redis-data-source","text":"grafana-cli plugins install redis-app","title":"Redis Application plug-in and Redis Data Source"},{"location":"quickstart/#redis-data-source","text":"grafana-cli plugins install redis-datasource","title":"\"Redis Data Source"},{"location":"quickstart/#redis-explorer","text":"It is under review and will be available shortly.","title":"Redis Explorer"},{"location":"quickstart/#run-using-docker","text":"Login to Grafana The Default username and password to login to Grafana are admin / admin .","title":"Run using Docker"},{"location":"quickstart/#redis-application-plug-in-and-redis-data-source_1","text":"docker run -d -p 3000 :3000 --name = grafana -e \"GF_INSTALL_PLUGINS=redis-app\" grafana/grafana","title":"Redis Application plug-in and Redis Data Source"},{"location":"quickstart/#redis-data-source_1","text":"docker run -d -p 3000 :3000 --name = grafana -e \"GF_INSTALL_PLUGINS=redis-datasource\" grafana/grafana","title":"Redis Data Source"},{"location":"quickstart/#redis-explorer_1","text":"Available as Nightly build while under review. docker run -p 3000 :3000 --name = explorer ghcr.io/redisgrafana/redis-explorer:latest Docker Images Interested in the latest features and updates? Start nightly built Docker image .","title":"Redis Explorer"},{"location":"quickstart/#install-without-internet-access","text":"","title":"Install without Internet access"},{"location":"quickstart/#redis-data-source_2","text":"Download the latest version from Releases . Unzip an archive to the plugins/ folder for local Grafana installation or Docker's volume. Check permissions for the redis-datasource binaries: Permissions Redis Data Source binaries should have executable permissions for Grafana to execute them. % ls -lrt redis-datasource* -rwxr-xr-x 1 mikhail staff 13077504 Mar 20 11 :20 redis-datasource_windows_amd64.exe -rwxr-xr-x 1 mikhail staff 11796480 Mar 20 11 :20 redis-datasource_linux_arm64 -rwxr-xr-x 1 mikhail staff 10682368 Mar 20 11 :20 redis-datasource_linux_arm -rwxr-xr-x 1 mikhail staff 12644352 Mar 20 11 :20 redis-datasource_linux_amd64 -rwxr-xr-x 1 mikhail staff 13806272 Mar 20 11 :20 redis-datasource_darwin_amd64 Check that plug-in was registered: t = 2020 -07-01T06:03:38+0000 lvl = info msg = \"Starting plugin search\" logger = plugins t = 2020 -07-01T06:03:38+0000 lvl = warn msg = \"Running an unsigned backend plugin\" logger = plugins pluginID = redis-datasource pluginDir = /var/lib/grafana/plugins/redis-datasource t = 2020 -07-01T06:03:38+0000 lvl = info msg = \"Registering plugin\" logger = plugins name = redis-datasource t = 2020 -07-01T06:03:38+0000 lvl = info msg = \"HTTP Server Listen\" logger = http.server address =[ :: ] :3000 protocol = http subUrl = socket =","title":"Redis Data Source"},{"location":"quickstart/#redis-application-plug-in","text":"Download the latest version from Releases . Unzip an archive to the plugins/ folder for local Grafana installation or Docker's volume.","title":"Redis Application plug-in"},{"location":"quickstart/#redis-explorer-plug-in","text":"Dependencies Redis Explorer plug-in requires Redis Data Source and Redis Application plug-in. Download the latest version from Releases . Unzip an archive to the plugins/ folder for local Grafana installation or Docker's volume.","title":"Redis Explorer plug-in"},{"location":"quickstart/#configuration","text":"","title":"Configuration"},{"location":"quickstart/#redis-data-source_3","text":"The Configuration page explains how to connect the data source to the Redis database.","title":"Redis Data Source"},{"location":"quickstart/#redis-application-plug-in_1","text":"The Overview page explains how to enable plug-in and manage Redis Data Sources.","title":"Redis Application plug-in"},{"location":"quickstart/#redis-explorer-plug-in_1","text":"The Overview page explains how to enable plug-in and manage Redis Enterprise Software Data Sources.","title":"Redis Explorer plug-in"},{"location":"quickstart/#learn-more","text":"Take a look at Learn More page to read recent blog posts and view presentations from conferences.","title":"Learn more"},{"location":"timeline/","text":"","title":"Timeline"},{"location":"development/images/","text":"Docker Images \u00b6 Interested in the latest features and updates? Start nightly built Docker image. Supported platforms are: Linux/amd64 Linux/arm64 Linux/arm Unstable Images built from the main branch and recommended for Testing new features and bugfixes only. Grafana \u00b6 Login to Grafana The Default username and password to login to Grafana are admin / admin . Redis Application plug-in \u00b6 The Redis Application is a plug-in for Grafana that provides application pages and custom panels for Redis Data Source. docker run -p 3000 :3000 --name = redis-app ghcr.io/redisgrafana/redis-app:latest Master build Special build based on the Grafana's Master branch. docker run -p 3000 :3000 --name = redis-app ghcr.io/redisgrafana/redis-app:master Redis Explorer plug-in \u00b6 The Redis Explorer is a plug-in for Grafana that allows users to connect to Redis Enterprise software clusters using REST API and build dashboards to observe their status. docker run -p 3000 :3000 --name = explorer ghcr.io/redisgrafana/redis-explorer:latest Master build Special build based on the Grafana's Master branch. docker run -p 3000 :3000 --name = redis-app ghcr.io/redisgrafana/redis-explorer:master Redis \u00b6 Redis-Prophet \u00b6 The Redis-Prophet Docker image based on the latest version of RedisTimeSeries, RedisGears with Prophet pre-installed and can be used for any project for time series forecasting. $ docker run -p 6379 :6379 --name = redis-prophet ghcr.io/redisgrafana/redis-prophet:latest","title":"Docker Images"},{"location":"development/images/#docker-images","text":"Interested in the latest features and updates? Start nightly built Docker image. Supported platforms are: Linux/amd64 Linux/arm64 Linux/arm Unstable Images built from the main branch and recommended for Testing new features and bugfixes only.","title":"Docker Images"},{"location":"development/images/#grafana","text":"Login to Grafana The Default username and password to login to Grafana are admin / admin .","title":"Grafana"},{"location":"development/images/#redis-application-plug-in","text":"The Redis Application is a plug-in for Grafana that provides application pages and custom panels for Redis Data Source. docker run -p 3000 :3000 --name = redis-app ghcr.io/redisgrafana/redis-app:latest Master build Special build based on the Grafana's Master branch. docker run -p 3000 :3000 --name = redis-app ghcr.io/redisgrafana/redis-app:master","title":"Redis Application plug-in"},{"location":"development/images/#redis-explorer-plug-in","text":"The Redis Explorer is a plug-in for Grafana that allows users to connect to Redis Enterprise software clusters using REST API and build dashboards to observe their status. docker run -p 3000 :3000 --name = explorer ghcr.io/redisgrafana/redis-explorer:latest Master build Special build based on the Grafana's Master branch. docker run -p 3000 :3000 --name = redis-app ghcr.io/redisgrafana/redis-explorer:master","title":"Redis Explorer plug-in"},{"location":"development/images/#redis","text":"","title":"Redis"},{"location":"development/images/#redis-prophet","text":"The Redis-Prophet Docker image based on the latest version of RedisTimeSeries, RedisGears with Prophet pre-installed and can be used for any project for time series forecasting. $ docker run -p 6379 :6379 --name = redis-prophet ghcr.io/redisgrafana/redis-prophet:latest","title":"Redis-Prophet"},{"location":"development/redis-app/","text":"Developing Redis Application plug-in \u00b6 Developing Application plug-in involves setting up the development environment (which can be either Linux-based or macOS-based), building and running tests. Install Grafana \u00b6 Grafana can be used in Docker or installed locally: Follow Installation instructions to install and start Grafana Open Grafana UI in web-browser http://X.X.X.X:3000 Clone repository \u00b6 git clone https://github.com/RedisGrafana/grafana-redis-app.git Build Application \u00b6 Install the latest version of Node.js using Node Version Manager or download binaries Install yarn globally npm install yarn -g Install dependencies yarn install Build frontend components yarn build Start Grafana \u00b6 Docker Compose Prerequisite Docker Compose should be pre-installed following documentation . yarn start:dev Docker-compose file for Development includes: Service redis using Redismod Service grafana using Grafana which allow loading unsigned plugins redis-app and redis-datasource Redis Data Source Redis Data Source should be cloned and built following Instructions . version: \"3.4\" services: redis: container_name: redismod image: redislabs/redismod:latest ports: - 6379 :6379/tcp # Uncomment and edit the local path in the following line to have # Redis' data persisted to the host's filesystem. # volumes: # - ./dump.rdb:/data/dump.rdb grafana: container_name: grafana image: grafana/grafana:latest ports: - 3000 :3000/tcp environment: - GF_AUTH_ANONYMOUS_ORG_ROLE = Admin - GF_AUTH_ANONYMOUS_ENABLED = true - GF_AUTH_BASIC_ENABLED = false - GF_ENABLE_GZIP = true - GF_USERS_DEFAULT_THEME = light - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS = redis-app,redis-datasource # Uncomment to run in debug mode # - GF_LOG_LEVEL=debug volumes: # Redis Data Source should be cloned and built - ../../grafana-redis-datasource/dist:/var/lib/grafana/plugins/redis-datasource - ../dist:/var/lib/grafana/plugins/redis-app - ../provisioning/datasources:/etc/grafana/provisioning/datasources - ../provisioning/plugins:/etc/grafana/provisioning/plugins # Uncomment to preserve Grafana configuration # - ./data:/var/lib/grafana Update local Grafana Configuration Move distribution to Grafana's plugins/ folder mv dist/ /var/lib/grafana/plugins/redis-app Add redis-app to allowed unsigned plugins vi /etc/grafana/grafana.ini [ plugins ] ; enable_alpha = false ; app_tls_skip_verify_insecure = false # Enter a comma-separated list of plugin identifiers to identify plugins that are allowed to be loaded even if they lack a valid signature. allow_loading_unsigned_plugins = redis-datasource,redis-app Restart and verify that plugin is registered tail -100 /var/log/grafana/grafana.log Configuration \u00b6 The Overview page explains how to enable plug-in and manage multiple Redis Data Sources. Contact Us \u00b6 If you have questions, enhancement ideas or running into issues, please open an issue .","title":"Redis Application"},{"location":"development/redis-app/#developing-redis-application-plug-in","text":"Developing Application plug-in involves setting up the development environment (which can be either Linux-based or macOS-based), building and running tests.","title":"Developing Redis Application plug-in"},{"location":"development/redis-app/#install-grafana","text":"Grafana can be used in Docker or installed locally: Follow Installation instructions to install and start Grafana Open Grafana UI in web-browser http://X.X.X.X:3000","title":"Install Grafana"},{"location":"development/redis-app/#clone-repository","text":"git clone https://github.com/RedisGrafana/grafana-redis-app.git","title":"Clone repository"},{"location":"development/redis-app/#build-application","text":"Install the latest version of Node.js using Node Version Manager or download binaries Install yarn globally npm install yarn -g Install dependencies yarn install Build frontend components yarn build","title":"Build Application"},{"location":"development/redis-app/#start-grafana","text":"Docker Compose Prerequisite Docker Compose should be pre-installed following documentation . yarn start:dev Docker-compose file for Development includes: Service redis using Redismod Service grafana using Grafana which allow loading unsigned plugins redis-app and redis-datasource Redis Data Source Redis Data Source should be cloned and built following Instructions . version: \"3.4\" services: redis: container_name: redismod image: redislabs/redismod:latest ports: - 6379 :6379/tcp # Uncomment and edit the local path in the following line to have # Redis' data persisted to the host's filesystem. # volumes: # - ./dump.rdb:/data/dump.rdb grafana: container_name: grafana image: grafana/grafana:latest ports: - 3000 :3000/tcp environment: - GF_AUTH_ANONYMOUS_ORG_ROLE = Admin - GF_AUTH_ANONYMOUS_ENABLED = true - GF_AUTH_BASIC_ENABLED = false - GF_ENABLE_GZIP = true - GF_USERS_DEFAULT_THEME = light - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS = redis-app,redis-datasource # Uncomment to run in debug mode # - GF_LOG_LEVEL=debug volumes: # Redis Data Source should be cloned and built - ../../grafana-redis-datasource/dist:/var/lib/grafana/plugins/redis-datasource - ../dist:/var/lib/grafana/plugins/redis-app - ../provisioning/datasources:/etc/grafana/provisioning/datasources - ../provisioning/plugins:/etc/grafana/provisioning/plugins # Uncomment to preserve Grafana configuration # - ./data:/var/lib/grafana Update local Grafana Configuration Move distribution to Grafana's plugins/ folder mv dist/ /var/lib/grafana/plugins/redis-app Add redis-app to allowed unsigned plugins vi /etc/grafana/grafana.ini [ plugins ] ; enable_alpha = false ; app_tls_skip_verify_insecure = false # Enter a comma-separated list of plugin identifiers to identify plugins that are allowed to be loaded even if they lack a valid signature. allow_loading_unsigned_plugins = redis-datasource,redis-app Restart and verify that plugin is registered tail -100 /var/log/grafana/grafana.log","title":"Start Grafana"},{"location":"development/redis-app/#configuration","text":"The Overview page explains how to enable plug-in and manage multiple Redis Data Sources.","title":"Configuration"},{"location":"development/redis-app/#contact-us","text":"If you have questions, enhancement ideas or running into issues, please open an issue .","title":"Contact Us"},{"location":"development/redis-datasource/","text":"Developing Redis Data Source \u00b6 Developing Redis Data Source involves setting up the development environment (which can be either Linux-based or macOS-based), building and running tests. Install Grafana \u00b6 Grafana can be started in Docker or installed locally: Follow Installation instructions to install and start Grafana Open Grafana UI in web-browser http://X.X.X.X:3000 Clone repository \u00b6 git clone https://github.com/RedisGrafana/grafana-redis-datasource.git Build \u00b6 Frontend \u00b6 Install the latest version of Node.js using Node Version Manager or download binaries Install yarn globally npm install yarn -g Install dependencies yarn install Build frontend components yarn build Backend \u00b6 Install Golang for your platform yum install go Install Grafana plugin SDK for Go dependency go get -u github.com/grafana/grafana-plugin-sdk-go Install Mage (make-like build tool using Go) git clone https://github.com/magefile/mage cd mage go run bootstrap.go Build backend binaries for Linux, Windows and MacOS for supported platforms yarn build:backend Start Grafana \u00b6 Docker Compose Prerequisite Docker Compose should be pre-installed following documentation . yarn start:dev Update local Grafana Configuration Move distribution to Grafana's plugins/ folder mv dist/ /var/lib/grafana/plugins/redis-datasource Add redis-datasource to allowed unsigned plugins vi /etc/grafana/grafana.ini [ plugins ] ; enable_alpha = false ; app_tls_skip_verify_insecure = false # Enter a comma-separated list of plugin identifiers to identify plugins that are allowed to be loaded even if they lack a valid signature. allow_loading_unsigned_plugins = redis-datasource Restart Grafana and verify that plugin registered tail -100 /var/log/grafana/grafana.log t = 2020 -07-01T06:03:38+0000 lvl = info msg = \"Starting plugin search\" logger = plugins t = 2020 -07-01T06:03:38+0000 lvl = warn msg = \"Running an unsigned backend plugin\" logger = plugins pluginID = redis-datasource pluginDir = /var/lib/grafana/plugins/redis-datasource t = 2020 -07-01T06:03:38+0000 lvl = info msg = \"Registering plugin\" logger = plugins name = redis-datasource t = 2020 -07-01T06:03:38+0000 lvl = info msg = \"HTTP Server Listen\" logger = http.server address =[ :: ] :3000 protocol = http subUrl = socket = Configuration \u00b6 The Redis Data Source Configuration page explains how to connect data source to Redis database. Contact Us \u00b6 If you have questions, enhancement ideas or running into issues, please open an issue .","title":"Redis Data Source"},{"location":"development/redis-datasource/#developing-redis-data-source","text":"Developing Redis Data Source involves setting up the development environment (which can be either Linux-based or macOS-based), building and running tests.","title":"Developing Redis Data Source"},{"location":"development/redis-datasource/#install-grafana","text":"Grafana can be started in Docker or installed locally: Follow Installation instructions to install and start Grafana Open Grafana UI in web-browser http://X.X.X.X:3000","title":"Install Grafana"},{"location":"development/redis-datasource/#clone-repository","text":"git clone https://github.com/RedisGrafana/grafana-redis-datasource.git","title":"Clone repository"},{"location":"development/redis-datasource/#build","text":"","title":"Build"},{"location":"development/redis-datasource/#frontend","text":"Install the latest version of Node.js using Node Version Manager or download binaries Install yarn globally npm install yarn -g Install dependencies yarn install Build frontend components yarn build","title":"Frontend"},{"location":"development/redis-datasource/#backend","text":"Install Golang for your platform yum install go Install Grafana plugin SDK for Go dependency go get -u github.com/grafana/grafana-plugin-sdk-go Install Mage (make-like build tool using Go) git clone https://github.com/magefile/mage cd mage go run bootstrap.go Build backend binaries for Linux, Windows and MacOS for supported platforms yarn build:backend","title":"Backend"},{"location":"development/redis-datasource/#start-grafana","text":"Docker Compose Prerequisite Docker Compose should be pre-installed following documentation . yarn start:dev Update local Grafana Configuration Move distribution to Grafana's plugins/ folder mv dist/ /var/lib/grafana/plugins/redis-datasource Add redis-datasource to allowed unsigned plugins vi /etc/grafana/grafana.ini [ plugins ] ; enable_alpha = false ; app_tls_skip_verify_insecure = false # Enter a comma-separated list of plugin identifiers to identify plugins that are allowed to be loaded even if they lack a valid signature. allow_loading_unsigned_plugins = redis-datasource Restart Grafana and verify that plugin registered tail -100 /var/log/grafana/grafana.log t = 2020 -07-01T06:03:38+0000 lvl = info msg = \"Starting plugin search\" logger = plugins t = 2020 -07-01T06:03:38+0000 lvl = warn msg = \"Running an unsigned backend plugin\" logger = plugins pluginID = redis-datasource pluginDir = /var/lib/grafana/plugins/redis-datasource t = 2020 -07-01T06:03:38+0000 lvl = info msg = \"Registering plugin\" logger = plugins name = redis-datasource t = 2020 -07-01T06:03:38+0000 lvl = info msg = \"HTTP Server Listen\" logger = http.server address =[ :: ] :3000 protocol = http subUrl = socket =","title":"Start Grafana"},{"location":"development/redis-datasource/#configuration","text":"The Redis Data Source Configuration page explains how to connect data source to Redis database.","title":"Configuration"},{"location":"development/redis-datasource/#contact-us","text":"If you have questions, enhancement ideas or running into issues, please open an issue .","title":"Contact Us"},{"location":"development/redis-explorer/","text":"Developing Redis Explorer plug-in \u00b6 Developing Explorer plug-in involves setting up the development environment (which can be either Linux-based or macOS-based), building and running tests. Install Grafana \u00b6 Grafana can be used in Docker or installed locally: Follow Installation instructions to install and start Grafana Open Grafana UI in web-browser http://X.X.X.X:3000 Clone repository \u00b6 git clone https://github.com/RedisGrafana/grafana-redis-explorer.git Build Explorer \u00b6 Install the latest version of Node.js using Node Version Manager or download binaries Install yarn globally npm install yarn -g Install dependencies yarn install Build frontend components yarn build Start Grafana \u00b6 Docker Compose Prerequisite Docker Compose should be pre-installed following documentation . yarn start:dev Update local Grafana Configuration Move distribution to Grafana's plugins/ folder mv dist/ /var/lib/grafana/plugins/redis-explorer Add redis-explorer-app to allowed unsigned plugins vi /etc/grafana/grafana.ini [ plugins ] ; enable_alpha = false ; app_tls_skip_verify_insecure = false # Enter a comma-separated list of plugin identifiers to identify plugins that are allowed to be loaded even if they lack a valid signature. allow_loading_unsigned_plugins = redis-explorer-app Restart Grafana and verify that plugin is registered tail -100 /var/log/grafana/grafana.log Configuration \u00b6 The Overview page explains how to enable plug-in and manage multiple Redis Enterprise Software data sources. Contact Us \u00b6 If you have questions, enhancement ideas or running into issues, please open an issue .","title":"Redis Explorer"},{"location":"development/redis-explorer/#developing-redis-explorer-plug-in","text":"Developing Explorer plug-in involves setting up the development environment (which can be either Linux-based or macOS-based), building and running tests.","title":"Developing Redis Explorer plug-in"},{"location":"development/redis-explorer/#install-grafana","text":"Grafana can be used in Docker or installed locally: Follow Installation instructions to install and start Grafana Open Grafana UI in web-browser http://X.X.X.X:3000","title":"Install Grafana"},{"location":"development/redis-explorer/#clone-repository","text":"git clone https://github.com/RedisGrafana/grafana-redis-explorer.git","title":"Clone repository"},{"location":"development/redis-explorer/#build-explorer","text":"Install the latest version of Node.js using Node Version Manager or download binaries Install yarn globally npm install yarn -g Install dependencies yarn install Build frontend components yarn build","title":"Build Explorer"},{"location":"development/redis-explorer/#start-grafana","text":"Docker Compose Prerequisite Docker Compose should be pre-installed following documentation . yarn start:dev Update local Grafana Configuration Move distribution to Grafana's plugins/ folder mv dist/ /var/lib/grafana/plugins/redis-explorer Add redis-explorer-app to allowed unsigned plugins vi /etc/grafana/grafana.ini [ plugins ] ; enable_alpha = false ; app_tls_skip_verify_insecure = false # Enter a comma-separated list of plugin identifiers to identify plugins that are allowed to be loaded even if they lack a valid signature. allow_loading_unsigned_plugins = redis-explorer-app Restart Grafana and verify that plugin is registered tail -100 /var/log/grafana/grafana.log","title":"Start Grafana"},{"location":"development/redis-explorer/#configuration","text":"The Overview page explains how to enable plug-in and manage multiple Redis Enterprise Software data sources.","title":"Configuration"},{"location":"development/redis-explorer/#contact-us","text":"If you have questions, enhancement ideas or running into issues, please open an issue .","title":"Contact Us"},{"location":"projects/finance-prophet/","text":"Forecasting Stocks and Crypto prices using Redis, Prophet and Grafana \u00b6 This project demonstrates how to analyze Stocks and Crypto historical data stored as RedisTimeSeries using serverless engine RedisGears , Facebook\u2019s Prophet Model to predict prices and Redis Data Source to visualize time series with predictions in Grafana. GitHub Repository https://github.com/RedisGrafana/redis-finance-prophet Description \u00b6 Forecasting Stocks and Crypto prices using Redis, Prophet, and Grafana Redis Labs announced RedisGears 1.0 in May last year, and one of the examples was the ProphetGears project, visualizing RedisTimeSeries with RedisInsight, which was the only option at that time. I already wrote about adopting RedisGears for other projects but have not had a chance to try it with Prophet until now. Prophet team recently (March 28, 2021) released Version 1.0 with many improvements, and I am excited to play with it. Read more at Volkov Labs blog .","title":"Forecasting Stocks"},{"location":"projects/finance-prophet/#forecasting-stocks-and-crypto-prices-using-redis-prophet-and-grafana","text":"This project demonstrates how to analyze Stocks and Crypto historical data stored as RedisTimeSeries using serverless engine RedisGears , Facebook\u2019s Prophet Model to predict prices and Redis Data Source to visualize time series with predictions in Grafana. GitHub Repository https://github.com/RedisGrafana/redis-finance-prophet","title":"Forecasting Stocks and Crypto prices using Redis, Prophet and Grafana"},{"location":"projects/finance-prophet/#description","text":"Forecasting Stocks and Crypto prices using Redis, Prophet, and Grafana Redis Labs announced RedisGears 1.0 in May last year, and one of the examples was the ProphetGears project, visualizing RedisTimeSeries with RedisInsight, which was the only option at that time. I already wrote about adopting RedisGears for other projects but have not had a chance to try it with Prophet until now. Prophet team recently (March 28, 2021) released Version 1.0 with many improvements, and I am excited to play with it. Read more at Volkov Labs blog .","title":"Description"},{"location":"projects/grafana-stats/","text":"Grafana Plug-ins Statistics \u00b6 This project collects plug-ins statistics from Grafana repository using RedisTimeSeries . GitHub Repository https://github.com/RedisGrafana/grafana-plugin-stats Description \u00b6 How to Use the New Redis Data Source for Grafana Plug-in Earlier this month, Redis Labs released the new Redis Data Source for Grafana plug-in, which connects the widely used open source application monitoring tool to Redis. To give you an idea of how it all works, let\u2019s take a look at a self-referential example: using the plug-in to see how many times it has been downloaded over time. (The Grafana plug-in repository itself does not provide such statistics out of the box.). Read more at Redis Labs blog .","title":"Plug-ins Statistics"},{"location":"projects/grafana-stats/#grafana-plug-ins-statistics","text":"This project collects plug-ins statistics from Grafana repository using RedisTimeSeries . GitHub Repository https://github.com/RedisGrafana/grafana-plugin-stats","title":"Grafana Plug-ins Statistics"},{"location":"projects/grafana-stats/#description","text":"How to Use the New Redis Data Source for Grafana Plug-in Earlier this month, Redis Labs released the new Redis Data Source for Grafana plug-in, which connects the widely used open source application monitoring tool to Redis. To give you an idea of how it all works, let\u2019s take a look at a self-referential example: using the plug-in to see how many times it has been downloaded over time. (The Grafana plug-in repository itself does not provide such statistics out of the box.). Read more at Redis Labs blog .","title":"Description"},{"location":"projects/pop-up-store/","text":"Pop-up store demo using RedisTimeSeries, RedisGears and Redis Data Source \u00b6 The Pop-up store demo is using Redis Streams , RedisTimeSeries , RedisGears and Redis Data Source to visualize real-time data pipeline in Grafana. GitHub Repository https://github.com/RedisTimeSeries/redis-pop-up-store Description \u00b6 3 Real-Life Apps Built with Redis Data Source for Grafana I am a big fan of Redis Streams, a new data type introduced in Redis 5.0, and I was looking for a fast and simple solution to monitor queues for data processing. While working on the Redis Data Source, our team started to explore RedisGears\u2014a dynamic framework that lets developers write and execute functions that implement data flows in Redis while abstracting away the data\u2019s distribution and deployment\u2014for another project and we decided to use them together for this data-pipeline demo for a pop-up store. Read more at Redis Labs blog . Streaming \u00b6 Dashboard with streaming Time Series (Grafana 7.4+) panels was recently added to the project:","title":"Pop-up Store"},{"location":"projects/pop-up-store/#pop-up-store-demo-using-redistimeseries-redisgears-and-redis-data-source","text":"The Pop-up store demo is using Redis Streams , RedisTimeSeries , RedisGears and Redis Data Source to visualize real-time data pipeline in Grafana. GitHub Repository https://github.com/RedisTimeSeries/redis-pop-up-store","title":"Pop-up store demo using RedisTimeSeries, RedisGears and Redis Data Source"},{"location":"projects/pop-up-store/#description","text":"3 Real-Life Apps Built with Redis Data Source for Grafana I am a big fan of Redis Streams, a new data type introduced in Redis 5.0, and I was looking for a fast and simple solution to monitor queues for data processing. While working on the Redis Data Source, our team started to explore RedisGears\u2014a dynamic framework that lets developers write and execute functions that implement data flows in Redis while abstracting away the data\u2019s distribution and deployment\u2014for another project and we decided to use them together for this data-pipeline demo for a pop-up store. Read more at Redis Labs blog .","title":"Description"},{"location":"projects/pop-up-store/#streaming","text":"Dashboard with streaming Time Series (Grafana 7.4+) panels was recently added to the project:","title":"Streaming"},{"location":"redis-app/overview/","text":"Redis Application plug-in \u00b6 The Redis Application is a plug-in for Grafana that provides application pages, dashboards and custom panels for Redis Data Source. The Home page helps to manage Redis Data Sources and provides quick access to dashboards. Redis Application plug-in architecture Enable Plug-in \u00b6 The Redis Application plug-in is disabled after installation by default. To enable: Go to Configuration -> Plugins and choose Redis Application plug-in. Click Enable to add side menu, Custom panels and import Dashboards. Home \u00b6 The Home page connects to every configured data source and checks available Redis Modules using the command command. Loading Time Page load can take a long time if databases located far away from Grafana or data source can't connect (timeout). Add Redis Data Source \u00b6 To add Redis Data Source click on Add Redis Data Source and configure data source following Configuration page. Dashboards \u00b6 Redis Application plug-in includes predefined dashboards: CLI (Command Line Interface) Redis Overview RedisGears Application Icon All dashboards are accessible from the Application's icon in the left side menu. Custom panels \u00b6 Redis Application plug-in provides custom panels for Redis Data Source: Command line interface (CLI) Command Latency Keys consuming a lot of memory RedisGears Script Editor Provisioning \u00b6 Grafana supports managing plugins in Grafana by adding one or more YAML config files in the provisioning/plugins directory: Each config file can contain a list of apps that will be updated during start up. Grafana updates each app to match the configuration file. apiVersion : 1 apps : - type : redis-app disabled : false","title":"Overview"},{"location":"redis-app/overview/#redis-application-plug-in","text":"The Redis Application is a plug-in for Grafana that provides application pages, dashboards and custom panels for Redis Data Source. The Home page helps to manage Redis Data Sources and provides quick access to dashboards. Redis Application plug-in architecture","title":"Redis Application plug-in"},{"location":"redis-app/overview/#enable-plug-in","text":"The Redis Application plug-in is disabled after installation by default. To enable: Go to Configuration -> Plugins and choose Redis Application plug-in. Click Enable to add side menu, Custom panels and import Dashboards.","title":"Enable Plug-in"},{"location":"redis-app/overview/#home","text":"The Home page connects to every configured data source and checks available Redis Modules using the command command. Loading Time Page load can take a long time if databases located far away from Grafana or data source can't connect (timeout).","title":"Home"},{"location":"redis-app/overview/#add-redis-data-source","text":"To add Redis Data Source click on Add Redis Data Source and configure data source following Configuration page.","title":"Add Redis Data Source"},{"location":"redis-app/overview/#dashboards","text":"Redis Application plug-in includes predefined dashboards: CLI (Command Line Interface) Redis Overview RedisGears Application Icon All dashboards are accessible from the Application's icon in the left side menu.","title":"Dashboards"},{"location":"redis-app/overview/#custom-panels","text":"Redis Application plug-in provides custom panels for Redis Data Source: Command line interface (CLI) Command Latency Keys consuming a lot of memory RedisGears Script Editor","title":"Custom panels"},{"location":"redis-app/overview/#provisioning","text":"Grafana supports managing plugins in Grafana by adding one or more YAML config files in the provisioning/plugins directory: Each config file can contain a list of apps that will be updated during start up. Grafana updates each app to match the configuration file. apiVersion : 1 apps : - type : redis-app disabled : false","title":"Provisioning"},{"location":"redis-app/dashboards/cli/","text":"CLI (Command Line Interface) \u00b6 Streaming All panels are running in Streaming mode. Panels \u00b6 Operations per second Connected clients CLI panel Number of Keys, Expired and Evicted Keys Network (Inbound, Outbound) Memory (Used Memory, Used Memory Peak, LUA, Memory Limit, and Total System memory) Uptime and Version Eviction Policy","title":"Redis CLI"},{"location":"redis-app/dashboards/cli/#cli-command-line-interface","text":"Streaming All panels are running in Streaming mode.","title":"CLI (Command Line Interface)"},{"location":"redis-app/dashboards/cli/#panels","text":"Operations per second Connected clients CLI panel Number of Keys, Expired and Evicted Keys Network (Inbound, Outbound) Memory (Used Memory, Used Memory Peak, LUA, Memory Limit, and Total System memory) Uptime and Version Eviction Policy","title":"Panels"},{"location":"redis-app/dashboards/overview/","text":"Redis Overview \u00b6 Refresh Overview dashboard refreshes every 10 seconds. Panels \u00b6 Operations per second Connected clients Number of Keys, Expired and Evicted Keys Network (Inbound, Outbound) Memory (Used Memory, Used Memory Peak and LUA, Memory Limit and Total System memory) Uptime and Version Eviction Policy Client connections Command statistics Slow queries log Redis cluster health and nodes","title":"Redis Overview"},{"location":"redis-app/dashboards/overview/#redis-overview","text":"Refresh Overview dashboard refreshes every 10 seconds.","title":"Redis Overview"},{"location":"redis-app/dashboards/overview/#panels","text":"Operations per second Connected clients Number of Keys, Expired and Evicted Keys Network (Inbound, Outbound) Memory (Used Memory, Used Memory Peak and LUA, Memory Limit and Total System memory) Uptime and Version Eviction Policy Client connections Command statistics Slow queries log Redis cluster health and nodes","title":"Panels"},{"location":"redis-app/dashboards/redis-gears/","text":"RedisGears \u00b6 RedisGears is a serverless engine for transaction, batch and event-driven data processing in Redis. Streaming Memory Usage and Registrations panels are running in Streaming mode. Panels \u00b6 RedisGears Memory Usage using RG.PYSTATS command Registrations using RG.DUMPREGISTRATIONS command RedisGears script editor","title":"RedisGears"},{"location":"redis-app/dashboards/redis-gears/#redisgears","text":"RedisGears is a serverless engine for transaction, batch and event-driven data processing in Redis. Streaming Memory Usage and Registrations panels are running in Streaming mode.","title":"RedisGears"},{"location":"redis-app/dashboards/redis-gears/#panels","text":"RedisGears Memory Usage using RG.PYSTATS command Registrations using RG.DUMPREGISTRATIONS command RedisGears script editor","title":"Panels"},{"location":"redis-app/panels/redis-cli-panel/","text":"Command line interface (CLI) \u00b6 This panel provides Redis command line interface that allows to send commands to Redis, and read the replies sent by the server, directly from the Grafana. Help \u00b6 When typing any Redis command or module name, brief description will appear on the panel. Details To learn more and see detailed description, click on the link in the bottom right corner of the help. Query Editor \u00b6 Data Source should be selected as variable or exact name. Query is not required. Options \u00b6 Option Description Command Redis Command Raw If enabled, use Raw formatting for replies Output Output is saved as panel's option and can be cleared using Clear button. Dashboard \u00b6 Redis CLI includes this panel.","title":"Command line interface (CLI)"},{"location":"redis-app/panels/redis-cli-panel/#command-line-interface-cli","text":"This panel provides Redis command line interface that allows to send commands to Redis, and read the replies sent by the server, directly from the Grafana.","title":"Command line interface (CLI)"},{"location":"redis-app/panels/redis-cli-panel/#help","text":"When typing any Redis command or module name, brief description will appear on the panel. Details To learn more and see detailed description, click on the link in the bottom right corner of the help.","title":"Help"},{"location":"redis-app/panels/redis-cli-panel/#query-editor","text":"Data Source should be selected as variable or exact name. Query is not required.","title":"Query Editor"},{"location":"redis-app/panels/redis-cli-panel/#options","text":"Option Description Command Redis Command Raw If enabled, use Raw formatting for replies Output Output is saved as panel's option and can be cleared using Clear button.","title":"Options"},{"location":"redis-app/panels/redis-cli-panel/#dashboard","text":"Redis CLI includes this panel.","title":"Dashboard"},{"location":"redis-app/panels/redis-gears-panel/","text":"RedisGears Script Editor \u00b6 This panel support Python syntax and allows to execute functions in blocking and unblocking modes using RG.PYEXECUTE command. RedisGears is a dynamic framework that enables developers to write and execute functions that implement data flows in Redis, while abstracting away the data\u2019s distribution and deployment. Query Editor \u00b6 Data Source should be selected as variable or exact name. Query is not required. Options \u00b6 Option Description Function Python function Requirements Ensures that list of dependencies it is given as an argument is installed on each shard before execution Unblocking Doesn't block the client during execution Dashboard \u00b6 RedisGears includes this panel.","title":"RedisGears Script Editor"},{"location":"redis-app/panels/redis-gears-panel/#redisgears-script-editor","text":"This panel support Python syntax and allows to execute functions in blocking and unblocking modes using RG.PYEXECUTE command. RedisGears is a dynamic framework that enables developers to write and execute functions that implement data flows in Redis, while abstracting away the data\u2019s distribution and deployment.","title":"RedisGears Script Editor"},{"location":"redis-app/panels/redis-gears-panel/#query-editor","text":"Data Source should be selected as variable or exact name. Query is not required.","title":"Query Editor"},{"location":"redis-app/panels/redis-gears-panel/#options","text":"Option Description Function Python function Requirements Ensures that list of dependencies it is given as an argument is installed on each shard before execution Unblocking Doesn't block the client during execution","title":"Options"},{"location":"redis-app/panels/redis-gears-panel/#dashboard","text":"RedisGears includes this panel.","title":"Dashboard"},{"location":"redis-app/panels/redis-keys-panel/","text":"Keys consuming a lot of memory \u00b6 Do you want to know which keys consume a lot of memory in your Redis database? This panel is based on TMSCAN to scan keys and sort results based on memory usage in the table format. Latency Please use this command in OFF-PEAK as it cause latency increase. Interval and count for SCAN command is configurable to keep latency under control. Query Editor \u00b6 Data Source should be selected as variable or exact name. Query is not required. Options \u00b6 Option Description Interval Interval to run SCAN command, ms Top Keys Calculate top keys in the results Count The amount of work that should be done at every call in order to retrieve elements from the collection for SCAN command Match pattern Patter for SCAN command Dashboard \u00b6 Redis CLI includes this panel.","title":"Keys consuming a lot of memory"},{"location":"redis-app/panels/redis-keys-panel/#keys-consuming-a-lot-of-memory","text":"Do you want to know which keys consume a lot of memory in your Redis database? This panel is based on TMSCAN to scan keys and sort results based on memory usage in the table format. Latency Please use this command in OFF-PEAK as it cause latency increase. Interval and count for SCAN command is configurable to keep latency under control.","title":"Keys consuming a lot of memory"},{"location":"redis-app/panels/redis-keys-panel/#query-editor","text":"Data Source should be selected as variable or exact name. Query is not required.","title":"Query Editor"},{"location":"redis-app/panels/redis-keys-panel/#options","text":"Option Description Interval Interval to run SCAN command, ms Top Keys Calculate top keys in the results Count The amount of work that should be done at every call in order to retrieve elements from the collection for SCAN command Match pattern Patter for SCAN command","title":"Options"},{"location":"redis-app/panels/redis-keys-panel/#dashboard","text":"Redis CLI includes this panel.","title":"Dashboard"},{"location":"redis-app/panels/redis-latency-panel/","text":"Command Latency \u00b6 This panel provides commands's latency based on INFO COMMANDSTATS . Redis is often used in the context of demanding use cases, where it serves a large number of queries per second per instance, and at the same time, there are very strict latency requirements both for the average response time and for the worst case latency. Query Editor \u00b6 Data Source should be selected as variable or exact name. Query is not required. Options \u00b6 Option Description Interval Interval to run INFO command, ms View mode Table or Graph Samples (Graph) Number of Samples per command Empty (Graph) Hide commands which have only zero values Graph view \u00b6 Table view \u00b6 Dashboard \u00b6 Redis CLI includes this panel.","title":"Command Latency"},{"location":"redis-app/panels/redis-latency-panel/#command-latency","text":"This panel provides commands's latency based on INFO COMMANDSTATS . Redis is often used in the context of demanding use cases, where it serves a large number of queries per second per instance, and at the same time, there are very strict latency requirements both for the average response time and for the worst case latency.","title":"Command Latency"},{"location":"redis-app/panels/redis-latency-panel/#query-editor","text":"Data Source should be selected as variable or exact name. Query is not required.","title":"Query Editor"},{"location":"redis-app/panels/redis-latency-panel/#options","text":"Option Description Interval Interval to run INFO command, ms View mode Table or Graph Samples (Graph) Number of Samples per command Empty (Graph) Hide commands which have only zero values","title":"Options"},{"location":"redis-app/panels/redis-latency-panel/#graph-view","text":"","title":"Graph view"},{"location":"redis-app/panels/redis-latency-panel/#table-view","text":"","title":"Table view"},{"location":"redis-app/panels/redis-latency-panel/#dashboard","text":"Redis CLI includes this panel.","title":"Dashboard"},{"location":"redis-datasource/commands/","text":"Supported Commands \u00b6 Redis Data Source supports core Redis, Custom and Redis Modules commands. Redis (Hashes, Sets, Lists, Strings, Streams, etc.) \u00b6 Command Description CLIENT LIST Returns information and statistics about the client connections server CLUSTER INFO Provides INFO style information about Redis Cluster vital parameters CLUSTER NODES Provides current cluster configuration, given by the set of known nodes GET Returns the value of key HGET Returns the value associated with field in the hash stored at key HGETALL Returns all fields and values of the hash stored at key HKEYS Returns all field names in the hash stored at key HLEN Returns the number of fields contained in the hash stored at key HMGET Returns the values associated with the specified fields in the hash stored at key INFO Returns information and statistics about the server LLEN Returns the length of the list stored at key SCARD Returns the set cardinality (number of elements) of the set stored at key SLOWLOG Returns the Redis slow queries log SMEMBERS Returns all the members of the set value stored at key TTL Returns the remaining time to live of a key that has a timeout TYPE Returns the string representation of the type of the value stored at key XINFO Introspection command used in order to retrieve different information about the streams and associated consumer groups XLEN Returns the number of entries inside a stream XRANGE Returns the stream entries matching a given range of IDs XREVRANGE Returns the stream entries matching a given range of IDs in reverse order Custom \u00b6 Command Description TMSCAN Returns keys with types and memory usage RedisTimeSeries \u00b6 RedisTimeSeries is a Redis Module adding a Time Series data structure to Redis. Command Description TS.GET Returns the last sample TS.INFO Returns information and statistics on the time-series TS.MRANGE Query a timestamp range across multiple time-series by filters TS.QUERYINDEX Query all the keys matching the filter list TS.RANGE Query a range RedisGears \u00b6 RedisGears is a serverless engine for transaction, batch and event-driven data processing in Redis. Command Description RG.DUMPREGISTRATIONS Outputs the list of function registrations RG.PYDUMPREQS Returns a list of all the python requirements available RG.PYEXECUTE Executes a Python function RG.PYSTATS Returns memory usage statistics from the Python interpreter RedisGraph \u00b6 RedisGraph is the first queryable Property Graph database to use sparse matrices to represent the adjacency matrix in graphs and linear algebra to query the graph. Command Description GRAPH.QUERY Executes the given query against a specified graph GRAPH.SLOWLOG Returns a list containing up to 10 of the slowest queries issued against the given graph ID RediSearch \u00b6 RediSearch is a source available Secondary Index, Query Engine and Full-Text Search over Redis. Command Description FT.INFO Returns information and statistics on the index","title":"Commands"},{"location":"redis-datasource/commands/#supported-commands","text":"Redis Data Source supports core Redis, Custom and Redis Modules commands.","title":"Supported Commands"},{"location":"redis-datasource/commands/#redis-hashes-sets-lists-strings-streams-etc","text":"Command Description CLIENT LIST Returns information and statistics about the client connections server CLUSTER INFO Provides INFO style information about Redis Cluster vital parameters CLUSTER NODES Provides current cluster configuration, given by the set of known nodes GET Returns the value of key HGET Returns the value associated with field in the hash stored at key HGETALL Returns all fields and values of the hash stored at key HKEYS Returns all field names in the hash stored at key HLEN Returns the number of fields contained in the hash stored at key HMGET Returns the values associated with the specified fields in the hash stored at key INFO Returns information and statistics about the server LLEN Returns the length of the list stored at key SCARD Returns the set cardinality (number of elements) of the set stored at key SLOWLOG Returns the Redis slow queries log SMEMBERS Returns all the members of the set value stored at key TTL Returns the remaining time to live of a key that has a timeout TYPE Returns the string representation of the type of the value stored at key XINFO Introspection command used in order to retrieve different information about the streams and associated consumer groups XLEN Returns the number of entries inside a stream XRANGE Returns the stream entries matching a given range of IDs XREVRANGE Returns the stream entries matching a given range of IDs in reverse order","title":"Redis (Hashes, Sets, Lists, Strings, Streams, etc.)"},{"location":"redis-datasource/commands/#custom","text":"Command Description TMSCAN Returns keys with types and memory usage","title":"Custom"},{"location":"redis-datasource/commands/#redistimeseries","text":"RedisTimeSeries is a Redis Module adding a Time Series data structure to Redis. Command Description TS.GET Returns the last sample TS.INFO Returns information and statistics on the time-series TS.MRANGE Query a timestamp range across multiple time-series by filters TS.QUERYINDEX Query all the keys matching the filter list TS.RANGE Query a range","title":"RedisTimeSeries"},{"location":"redis-datasource/commands/#redisgears","text":"RedisGears is a serverless engine for transaction, batch and event-driven data processing in Redis. Command Description RG.DUMPREGISTRATIONS Outputs the list of function registrations RG.PYDUMPREQS Returns a list of all the python requirements available RG.PYEXECUTE Executes a Python function RG.PYSTATS Returns memory usage statistics from the Python interpreter","title":"RedisGears"},{"location":"redis-datasource/commands/#redisgraph","text":"RedisGraph is the first queryable Property Graph database to use sparse matrices to represent the adjacency matrix in graphs and linear algebra to query the graph. Command Description GRAPH.QUERY Executes the given query against a specified graph GRAPH.SLOWLOG Returns a list containing up to 10 of the slowest queries issued against the given graph ID","title":"RedisGraph"},{"location":"redis-datasource/commands/#redisearch","text":"RediSearch is a source available Secondary Index, Query Engine and Full-Text Search over Redis. Command Description FT.INFO Returns information and statistics on the index","title":"RediSearch"},{"location":"redis-datasource/configuration/","text":"Configuration \u00b6 You can add as many data sources as you want to support multiple Redis databases. Redis accepts clients connections on the configured listening TCP port and the Unix socket if enabled. Cluster is a distributed implementation of OSS Redis and Sentinel provides high availability. Main configuration \u00b6 Address \u00b6 Specify host:port address or a URI to connect to Redis. Please use /db-number or ?db=db-number to specify the logical database number as defined in the Schema : redis://redis-server:6379/0 Cluster \u00b6 In Cluster mode Address can contain multiple values ( host:port address or a URI) with comma. Sentinel \u00b6 In Sentinel mode Address can contain multiple values ( host:port address or a URI) with comma. Master Name is required to connect to Sentinel. Unix socket \u00b6 In Unix socket mode Address should contain path to the socket file. ACL \u00b6 Available since Redis 6.0 and allows to specify Username to authenticate. Password \u00b6 Security Passwords are kept in the Grafana security database and not accessible to users. When specified AUTH command will be used to authenticate with the provided password. Pool Size \u00b6 Data source will keep open at least the given number of connections to the Redis instance at the provided Address . The recommended size of the pool is 5 and can be increased if dashboards have a lot of panels and multiple users. Advanced configuration \u00b6 Timeout \u00b6 Sets the duration in seconds for connect, read and write timeouts. Default value is 10 seconds. Ping Interval \u00b6 Specifies the interval in seconds at which a ping event happens. A shorter interval means connections are pinged more frequently, but also means more traffic with the server. If interval is zero then ping will be disabled. Default value is 0. Pipeline Window \u00b6 Sets the duration in microseconds after which internal pipelines will be flushed. If window is zero then implicit pipelining will be disabled. Default value is 0. SSL/TLS \u00b6 To support SSL/TLS authentication enable it and provide all required parameters. Skip Verify \u00b6 If checked, the server's certificate will not be checked for validity. Should be enabled for Self-Signed certificates. Client Certificate and Key \u00b6 Security Client certificates and keys are kept in the Grafana security database and not accessible to users. Client Certificate and Key should be provided when client authentication is enforced. Certification Authority \u00b6 Provide certificate to validate server's certificate or enable Skip Verify .","title":"Configuration"},{"location":"redis-datasource/configuration/#configuration","text":"You can add as many data sources as you want to support multiple Redis databases. Redis accepts clients connections on the configured listening TCP port and the Unix socket if enabled. Cluster is a distributed implementation of OSS Redis and Sentinel provides high availability.","title":"Configuration"},{"location":"redis-datasource/configuration/#main-configuration","text":"","title":"Main configuration"},{"location":"redis-datasource/configuration/#address","text":"Specify host:port address or a URI to connect to Redis. Please use /db-number or ?db=db-number to specify the logical database number as defined in the Schema : redis://redis-server:6379/0","title":"Address"},{"location":"redis-datasource/configuration/#cluster","text":"In Cluster mode Address can contain multiple values ( host:port address or a URI) with comma.","title":"Cluster"},{"location":"redis-datasource/configuration/#sentinel","text":"In Sentinel mode Address can contain multiple values ( host:port address or a URI) with comma. Master Name is required to connect to Sentinel.","title":"Sentinel"},{"location":"redis-datasource/configuration/#unix-socket","text":"In Unix socket mode Address should contain path to the socket file.","title":"Unix socket"},{"location":"redis-datasource/configuration/#acl","text":"Available since Redis 6.0 and allows to specify Username to authenticate.","title":"ACL"},{"location":"redis-datasource/configuration/#password","text":"Security Passwords are kept in the Grafana security database and not accessible to users. When specified AUTH command will be used to authenticate with the provided password.","title":"Password"},{"location":"redis-datasource/configuration/#pool-size","text":"Data source will keep open at least the given number of connections to the Redis instance at the provided Address . The recommended size of the pool is 5 and can be increased if dashboards have a lot of panels and multiple users.","title":"Pool Size"},{"location":"redis-datasource/configuration/#advanced-configuration","text":"","title":"Advanced configuration"},{"location":"redis-datasource/configuration/#timeout","text":"Sets the duration in seconds for connect, read and write timeouts. Default value is 10 seconds.","title":"Timeout"},{"location":"redis-datasource/configuration/#ping-interval","text":"Specifies the interval in seconds at which a ping event happens. A shorter interval means connections are pinged more frequently, but also means more traffic with the server. If interval is zero then ping will be disabled. Default value is 0.","title":"Ping Interval"},{"location":"redis-datasource/configuration/#pipeline-window","text":"Sets the duration in microseconds after which internal pipelines will be flushed. If window is zero then implicit pipelining will be disabled. Default value is 0.","title":"Pipeline Window"},{"location":"redis-datasource/configuration/#ssltls","text":"To support SSL/TLS authentication enable it and provide all required parameters.","title":"SSL/TLS"},{"location":"redis-datasource/configuration/#skip-verify","text":"If checked, the server's certificate will not be checked for validity. Should be enabled for Self-Signed certificates.","title":"Skip Verify"},{"location":"redis-datasource/configuration/#client-certificate-and-key","text":"Security Client certificates and keys are kept in the Grafana security database and not accessible to users. Client Certificate and Key should be provided when client authentication is enforced.","title":"Client Certificate and Key"},{"location":"redis-datasource/configuration/#certification-authority","text":"Provide certificate to validate server's certificate or enable Skip Verify .","title":"Certification Authority"},{"location":"redis-datasource/overview/","text":"Redis Data Source \u00b6 Data Source allows to connect to any Redis database On-Premises or in the Cloud. Redis Application plug-in Redis Application plug-in helps to manage multiple Redis Data Sources and provides Custom panels. Configuration \u00b6 The Configuration page explains how to connect data source to Redis database. Query Editor \u00b6 Choose Type to select core Redis, Custom or Redis Module Select one of supported Commands Provide all required parameters, depends on selected Command Enable Streaming to visualize data on Graph, Time-Series (Grafana 7.4+) panels Variables \u00b6 Template variables can query any command which return list of values and use other variables as parameters. Provisioning \u00b6 Grafana supports managing data sources by adding one or more YAML config files in the provisioning/datasources directory: Each config file can contain a list of datasources that will get added or updated during start up. If the data source already exists, then Grafana updates it to match the configuration file. Standalone apiVersion : 1 datasources : - name : Redis type : redis-datasource access : proxy orgId : 1 isDefault : true version : 1 url : redis://host.docker.internal:6379 jsonData : client : standalone poolSize : 5 timeout : 10 pingInterval : 0 pipelineWindow : 0 editable : true Sentinel apiVersion : 1 datasources : - name : Sentinel type : redis-datasource access : proxy orgId : 1 isDefault : true version : 1 url : redis://host.docker.internal:6379 jsonData : client : sentinel sentinelName : Test poolSize : 5 timeout : 10 pingInterval : 0 pipelineWindow : 0 editable : true Known issues \u00b6 Plugin health check failed \u00b6 Redis Data Source binaries should have executable permissions for Grafana to be able to execute it. Check out Quickstart page for more information. Redis_datasource_darwin_amd64 cannot be opened because the developer cannot be verified \u00b6 Go to System Preferences > Security & Privacy and set to allow redis-datasource_darwin_amd64 .","title":"Overview"},{"location":"redis-datasource/overview/#redis-data-source","text":"Data Source allows to connect to any Redis database On-Premises or in the Cloud. Redis Application plug-in Redis Application plug-in helps to manage multiple Redis Data Sources and provides Custom panels.","title":"Redis Data Source"},{"location":"redis-datasource/overview/#configuration","text":"The Configuration page explains how to connect data source to Redis database.","title":"Configuration"},{"location":"redis-datasource/overview/#query-editor","text":"Choose Type to select core Redis, Custom or Redis Module Select one of supported Commands Provide all required parameters, depends on selected Command Enable Streaming to visualize data on Graph, Time-Series (Grafana 7.4+) panels","title":"Query Editor"},{"location":"redis-datasource/overview/#variables","text":"Template variables can query any command which return list of values and use other variables as parameters.","title":"Variables"},{"location":"redis-datasource/overview/#provisioning","text":"Grafana supports managing data sources by adding one or more YAML config files in the provisioning/datasources directory: Each config file can contain a list of datasources that will get added or updated during start up. If the data source already exists, then Grafana updates it to match the configuration file. Standalone apiVersion : 1 datasources : - name : Redis type : redis-datasource access : proxy orgId : 1 isDefault : true version : 1 url : redis://host.docker.internal:6379 jsonData : client : standalone poolSize : 5 timeout : 10 pingInterval : 0 pipelineWindow : 0 editable : true Sentinel apiVersion : 1 datasources : - name : Sentinel type : redis-datasource access : proxy orgId : 1 isDefault : true version : 1 url : redis://host.docker.internal:6379 jsonData : client : sentinel sentinelName : Test poolSize : 5 timeout : 10 pingInterval : 0 pipelineWindow : 0 editable : true","title":"Provisioning"},{"location":"redis-datasource/overview/#known-issues","text":"","title":"Known issues"},{"location":"redis-datasource/overview/#plugin-health-check-failed","text":"Redis Data Source binaries should have executable permissions for Grafana to be able to execute it. Check out Quickstart page for more information.","title":"Plugin health check failed"},{"location":"redis-datasource/overview/#redis_datasource_darwin_amd64-cannot-be-opened-because-the-developer-cannot-be-verified","text":"Go to System Preferences > Security & Privacy and set to allow redis-datasource_darwin_amd64 .","title":"Redis_datasource_darwin_amd64 cannot be opened because the developer cannot be verified"},{"location":"redis-datasource/streaming/","text":"Streaming \u00b6 Redis Data Source supports Streaming. Please take a look at the specific command for details. A dot in the top right corner Since Grafana 7.4 a dot in the top right corner means that Streaming is enabled. Parameters \u00b6 Parameter Description Default Interval Streaming interval in milliseconds 1000 ms Capacity Values will be constantly added and will never exceed the given capacity 1000 ms Data type Streaming data supported as Time series and Data frames Time series Time series \u00b6 When selected, time field will be added or replaced to allow visualize values using Graph or Time Series (Grafana 7.4+) panels. Multi-line results If the command returns more than one line, the last line of data will be returned. Data frame \u00b6 When selected, data will be refreshed as is.","title":"Streaming"},{"location":"redis-datasource/streaming/#streaming","text":"Redis Data Source supports Streaming. Please take a look at the specific command for details. A dot in the top right corner Since Grafana 7.4 a dot in the top right corner means that Streaming is enabled.","title":"Streaming"},{"location":"redis-datasource/streaming/#parameters","text":"Parameter Description Default Interval Streaming interval in milliseconds 1000 ms Capacity Values will be constantly added and will never exceed the given capacity 1000 ms Data type Streaming data supported as Time series and Data frames Time series","title":"Parameters"},{"location":"redis-datasource/streaming/#time-series","text":"When selected, time field will be added or replaced to allow visualize values using Graph or Time Series (Grafana 7.4+) panels. Multi-line results If the command returns more than one line, the last line of data will be returned.","title":"Time series"},{"location":"redis-datasource/streaming/#data-frame","text":"When selected, data will be refreshed as is.","title":"Data frame"},{"location":"redis-datasource/variables/","text":"Variables \u00b6 Template variables can query Commands and use other variables as parameters. Advanced variable format options The formatting of the variable interpolation depends on the data source. There are some situations where you might want to change the default formatting . Supported Parameters \u00b6 Variables will be replaced in the following parameters: Parameter Description Command Key Key name GET , XRANGE , etc. Query CLI query Any Field Hash Field HGET , HMGET Filter Filter TS.MRANGE , TS.QUERYINDEX Legend Frame's name TS.RANGE Value Serie's name TS.RANGE How to use SUNION for multi-select variable? \u00b6 LUA The LUA script should work fine on a single shard deployment: eval \"return redis.call('sunion', ${ region : singlequote } )\" 0 Redis Gears Another option is to utilize RedisGears module: gb = GB ( 'CommandReader' ) gb . flatmap ( lambda x : execute ( 'SUNION' , * x [ 1 ] . split ( \",\" ))) gb . register ( trigger = 'SUNION' ) To execute the trigger in Grafana: RG.TRIGGER SUNION ${ region : csv }","title":"Variables"},{"location":"redis-datasource/variables/#variables","text":"Template variables can query Commands and use other variables as parameters. Advanced variable format options The formatting of the variable interpolation depends on the data source. There are some situations where you might want to change the default formatting .","title":"Variables"},{"location":"redis-datasource/variables/#supported-parameters","text":"Variables will be replaced in the following parameters: Parameter Description Command Key Key name GET , XRANGE , etc. Query CLI query Any Field Hash Field HGET , HMGET Filter Filter TS.MRANGE , TS.QUERYINDEX Legend Frame's name TS.RANGE Value Serie's name TS.RANGE","title":"Supported Parameters"},{"location":"redis-datasource/variables/#how-to-use-sunion-for-multi-select-variable","text":"LUA The LUA script should work fine on a single shard deployment: eval \"return redis.call('sunion', ${ region : singlequote } )\" 0 Redis Gears Another option is to utilize RedisGears module: gb = GB ( 'CommandReader' ) gb . flatmap ( lambda x : execute ( 'SUNION' , * x [ 1 ] . split ( \",\" ))) gb . register ( trigger = 'SUNION' ) To execute the trigger in Grafana: RG.TRIGGER SUNION ${ region : csv }","title":"How to use SUNION for multi-select variable?"},{"location":"redis-datasource/custom/TMSCAN/","text":"TMSCAN \u00b6 Returns keys with types and memory usage. This custom command is based on SCAN and MEMORY USAGE commands and is not a part of Redis server. SCAN is a cursor based iterator. This means that at every call of the command, the server returns an updated cursor that the user needs to use as the cursor argument in the next call. The MEMORY USAGE command reports the number of bytes that a key and its value require to be stored in RAM. Latency Please use this command in OFF-PEAK as it cause latency increase. Found results and Cursor returns in separate frames. Parameters \u00b6 Parameter Description Size Calculate top keys in the results Cursor Iterator for SCAN command Match pattern Pattern for SCAN command Count The amount of work that should be done at every call in order to retrieve elements from the collection for SCAN command Samples Number of sampled nested values for MEMORY USAGE command Streaming \u00b6 Streaming is not supported. Visualization \u00b6 Table Keys consuming a lot of memory panel","title":"TMSCAN"},{"location":"redis-datasource/custom/TMSCAN/#tmscan","text":"Returns keys with types and memory usage. This custom command is based on SCAN and MEMORY USAGE commands and is not a part of Redis server. SCAN is a cursor based iterator. This means that at every call of the command, the server returns an updated cursor that the user needs to use as the cursor argument in the next call. The MEMORY USAGE command reports the number of bytes that a key and its value require to be stored in RAM. Latency Please use this command in OFF-PEAK as it cause latency increase. Found results and Cursor returns in separate frames.","title":"TMSCAN"},{"location":"redis-datasource/custom/TMSCAN/#parameters","text":"Parameter Description Size Calculate top keys in the results Cursor Iterator for SCAN command Match pattern Pattern for SCAN command Count The amount of work that should be done at every call in order to retrieve elements from the collection for SCAN command Samples Number of sampled nested values for MEMORY USAGE command","title":"Parameters"},{"location":"redis-datasource/custom/TMSCAN/#streaming","text":"Streaming is not supported.","title":"Streaming"},{"location":"redis-datasource/custom/TMSCAN/#visualization","text":"Table Keys consuming a lot of memory panel","title":"Visualization"},{"location":"redis-datasource/redis/CLIENT-LIST/","text":"CLIENT LIST \u00b6 This command returns information and statistics about the client connections server. Redis Core https://redis.io/commands/CLIENT-LIST Parameters \u00b6 No parameters is required. Streaming \u00b6 Streaming supported as Data frame . Visualization \u00b6 Table","title":"CLIENT LIST"},{"location":"redis-datasource/redis/CLIENT-LIST/#client-list","text":"This command returns information and statistics about the client connections server. Redis Core https://redis.io/commands/CLIENT-LIST","title":"CLIENT LIST"},{"location":"redis-datasource/redis/CLIENT-LIST/#parameters","text":"No parameters is required.","title":"Parameters"},{"location":"redis-datasource/redis/CLIENT-LIST/#streaming","text":"Streaming supported as Data frame .","title":"Streaming"},{"location":"redis-datasource/redis/CLIENT-LIST/#visualization","text":"Table","title":"Visualization"},{"location":"redis-datasource/redis/CLUSTER-INFO/","text":"CLUSTER INFO \u00b6 This command provides INFO style information about Redis Cluster vital parameters. Redis Core https://redis.io/commands/CLUSTER-INFO Parameters \u00b6 No parameters is required. Streaming \u00b6 Streaming supported as Data frame . Visualization \u00b6 Any standard visualization should work.","title":"CLUSTER INFO"},{"location":"redis-datasource/redis/CLUSTER-INFO/#cluster-info","text":"This command provides INFO style information about Redis Cluster vital parameters. Redis Core https://redis.io/commands/CLUSTER-INFO","title":"CLUSTER INFO"},{"location":"redis-datasource/redis/CLUSTER-INFO/#parameters","text":"No parameters is required.","title":"Parameters"},{"location":"redis-datasource/redis/CLUSTER-INFO/#streaming","text":"Streaming supported as Data frame .","title":"Streaming"},{"location":"redis-datasource/redis/CLUSTER-INFO/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis/CLUSTER-NODES/","text":"CLUSTER NODES \u00b6 This command provides INFO style information about Redis Cluster vital parameters. Redis Core https://redis.io/commands/CLUSTER-NODES Parameters \u00b6 No parameters is required. Streaming \u00b6 Streaming supported as Data frame . Visualization \u00b6 Any standard visualization should work.","title":"CLUSTER NODES"},{"location":"redis-datasource/redis/CLUSTER-NODES/#cluster-nodes","text":"This command provides INFO style information about Redis Cluster vital parameters. Redis Core https://redis.io/commands/CLUSTER-NODES","title":"CLUSTER NODES"},{"location":"redis-datasource/redis/CLUSTER-NODES/#parameters","text":"No parameters is required.","title":"Parameters"},{"location":"redis-datasource/redis/CLUSTER-NODES/#streaming","text":"Streaming supported as Data frame .","title":"Streaming"},{"location":"redis-datasource/redis/CLUSTER-NODES/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis/GET/","text":"GET \u00b6 This command returns the value of key. Redis Core https://redis.io/commands/GET Parameters \u00b6 Parameter Description Key Key name Streaming \u00b6 Streaming supported as Time Series and Data frame . Visualization \u00b6 Any standard visualization should work.","title":"GET"},{"location":"redis-datasource/redis/GET/#get","text":"This command returns the value of key. Redis Core https://redis.io/commands/GET","title":"GET"},{"location":"redis-datasource/redis/GET/#parameters","text":"Parameter Description Key Key name","title":"Parameters"},{"location":"redis-datasource/redis/GET/#streaming","text":"Streaming supported as Time Series and Data frame .","title":"Streaming"},{"location":"redis-datasource/redis/GET/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis/HGET/","text":"HGET \u00b6 This command returns the value associated with field in the hash stored at key. Redis Core https://redis.io/commands/HGET Parameters \u00b6 Parameter Description Key Key name Field Field in the hash Streaming \u00b6 Streaming supported as Time Series and Data frame . Visualization \u00b6 Any standard visualization should work.","title":"HGET"},{"location":"redis-datasource/redis/HGET/#hget","text":"This command returns the value associated with field in the hash stored at key. Redis Core https://redis.io/commands/HGET","title":"HGET"},{"location":"redis-datasource/redis/HGET/#parameters","text":"Parameter Description Key Key name Field Field in the hash","title":"Parameters"},{"location":"redis-datasource/redis/HGET/#streaming","text":"Streaming supported as Time Series and Data frame .","title":"Streaming"},{"location":"redis-datasource/redis/HGET/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis/HGETALL/","text":"HGETALL \u00b6 This command returns all fields and values of the hash stored at key. Redis Core https://redis.io/commands/HGETALL Parameters \u00b6 Parameter Description Key Key name Streaming \u00b6 Streaming supported as Time Series and Data frame . Visualization \u00b6 Any standard visualization should work.","title":"HGETALL"},{"location":"redis-datasource/redis/HGETALL/#hgetall","text":"This command returns all fields and values of the hash stored at key. Redis Core https://redis.io/commands/HGETALL","title":"HGETALL"},{"location":"redis-datasource/redis/HGETALL/#parameters","text":"Parameter Description Key Key name","title":"Parameters"},{"location":"redis-datasource/redis/HGETALL/#streaming","text":"Streaming supported as Time Series and Data frame .","title":"Streaming"},{"location":"redis-datasource/redis/HGETALL/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis/HKEYS/","text":"HKEYS \u00b6 This command returns all field names in the hash stored at key. Redis Core https://redis.io/commands/HKEYS Parameters \u00b6 Parameter Description Key Key name Streaming \u00b6 Streaming supported as Time Series and Data frame . Visualization \u00b6 Any standard visualization should work.","title":"HKEYS"},{"location":"redis-datasource/redis/HKEYS/#hkeys","text":"This command returns all field names in the hash stored at key. Redis Core https://redis.io/commands/HKEYS","title":"HKEYS"},{"location":"redis-datasource/redis/HKEYS/#parameters","text":"Parameter Description Key Key name","title":"Parameters"},{"location":"redis-datasource/redis/HKEYS/#streaming","text":"Streaming supported as Time Series and Data frame .","title":"Streaming"},{"location":"redis-datasource/redis/HKEYS/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis/HLEN/","text":"HLEN \u00b6 This command returns the number of fields contained in the hash stored at key. Redis Core https://redis.io/commands/HLEN Parameters \u00b6 Parameter Description Key Key name Streaming \u00b6 Streaming supported as Time Series and Data frame . Visualization \u00b6 Any standard visualization should work.","title":"HLEN"},{"location":"redis-datasource/redis/HLEN/#hlen","text":"This command returns the number of fields contained in the hash stored at key. Redis Core https://redis.io/commands/HLEN","title":"HLEN"},{"location":"redis-datasource/redis/HLEN/#parameters","text":"Parameter Description Key Key name","title":"Parameters"},{"location":"redis-datasource/redis/HLEN/#streaming","text":"Streaming supported as Time Series and Data frame .","title":"Streaming"},{"location":"redis-datasource/redis/HLEN/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis/HMGET/","text":"HMGET \u00b6 This command returns the values associated with the specified fields in the hash stored at key. Redis Core https://redis.io/commands/HMGET Parameters \u00b6 Parameter Description Key Key name Field One or more fields in the hash separated with space Streaming \u00b6 Streaming supported as Time Series and Data frame . Visualization \u00b6 Any standard visualization should work.","title":"HMGET"},{"location":"redis-datasource/redis/HMGET/#hmget","text":"This command returns the values associated with the specified fields in the hash stored at key. Redis Core https://redis.io/commands/HMGET","title":"HMGET"},{"location":"redis-datasource/redis/HMGET/#parameters","text":"Parameter Description Key Key name Field One or more fields in the hash separated with space","title":"Parameters"},{"location":"redis-datasource/redis/HMGET/#streaming","text":"Streaming supported as Time Series and Data frame .","title":"Streaming"},{"location":"redis-datasource/redis/HMGET/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis/INFO/","text":"INFO \u00b6 This command returns information and statistics about the server. Redis Core https://redis.io/commands/INFO Parameters \u00b6 Parameter Description Section Section of information Sections \u00b6 Section Description Streaming Visualization Server General information about the Redis server Yes Any Clients Client connections Yes Any Memory Memory consumption related information Yes Any Persistence RDB and AOF related information Yes Any Stats General statistics Yes Any, Command Latency panel Replication Master/replica replication information Yes Any CPU CPU consumption statistics Yes Any Command Stats Redis command statistics Number of calls per command Any Cluster Redis Cluster Yes Any Modules (not supported) Modules - - Keyspace (not supported) Database related statistics - - Error Stats Redis error statistics (Redis 6.2) Yes Any Command Latency To see Latency per command based on Command Stats , take a look at Command Latency panel. Memory \u00b6 Streaming \u00b6 Streaming supported as Time Series and Data frame for the most sections. Check Streaming column for specific section. Visualization \u00b6 Any standard visualization should work. Check Visualization column for specific section. Dashboards \u00b6 Redis CLI includes Graph, Command Latency panels using this command. Redis Overview includes Stats, Bar gauge, Table panels using this command.","title":"INFO"},{"location":"redis-datasource/redis/INFO/#info","text":"This command returns information and statistics about the server. Redis Core https://redis.io/commands/INFO","title":"INFO"},{"location":"redis-datasource/redis/INFO/#parameters","text":"Parameter Description Section Section of information","title":"Parameters"},{"location":"redis-datasource/redis/INFO/#sections","text":"Section Description Streaming Visualization Server General information about the Redis server Yes Any Clients Client connections Yes Any Memory Memory consumption related information Yes Any Persistence RDB and AOF related information Yes Any Stats General statistics Yes Any, Command Latency panel Replication Master/replica replication information Yes Any CPU CPU consumption statistics Yes Any Command Stats Redis command statistics Number of calls per command Any Cluster Redis Cluster Yes Any Modules (not supported) Modules - - Keyspace (not supported) Database related statistics - - Error Stats Redis error statistics (Redis 6.2) Yes Any Command Latency To see Latency per command based on Command Stats , take a look at Command Latency panel.","title":"Sections"},{"location":"redis-datasource/redis/INFO/#memory","text":"","title":"Memory"},{"location":"redis-datasource/redis/INFO/#streaming","text":"Streaming supported as Time Series and Data frame for the most sections. Check Streaming column for specific section.","title":"Streaming"},{"location":"redis-datasource/redis/INFO/#visualization","text":"Any standard visualization should work. Check Visualization column for specific section.","title":"Visualization"},{"location":"redis-datasource/redis/INFO/#dashboards","text":"Redis CLI includes Graph, Command Latency panels using this command. Redis Overview includes Stats, Bar gauge, Table panels using this command.","title":"Dashboards"},{"location":"redis-datasource/redis/LLEN/","text":"LLEN \u00b6 This command returns the length of the list stored at key. Redis Core https://redis.io/commands/LLEN Parameters \u00b6 Parameter Description Key Key name Streaming \u00b6 Streaming supported as Time Series and Data frame . Visualization \u00b6 Any standard visualization should work.","title":"LLEN"},{"location":"redis-datasource/redis/LLEN/#llen","text":"This command returns the length of the list stored at key. Redis Core https://redis.io/commands/LLEN","title":"LLEN"},{"location":"redis-datasource/redis/LLEN/#parameters","text":"Parameter Description Key Key name","title":"Parameters"},{"location":"redis-datasource/redis/LLEN/#streaming","text":"Streaming supported as Time Series and Data frame .","title":"Streaming"},{"location":"redis-datasource/redis/LLEN/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis/SCARD/","text":"SCARD \u00b6 This command returns the set cardinality (number of elements) of the set stored at key. Redis Core https://redis.io/commands/SCARD Parameters \u00b6 Parameter Description Key Key name Streaming \u00b6 Streaming supported as Time Series and Data frame . Visualization \u00b6 Any standard visualization should work.","title":"SCARD"},{"location":"redis-datasource/redis/SCARD/#scard","text":"This command returns the set cardinality (number of elements) of the set stored at key. Redis Core https://redis.io/commands/SCARD","title":"SCARD"},{"location":"redis-datasource/redis/SCARD/#parameters","text":"Parameter Description Key Key name","title":"Parameters"},{"location":"redis-datasource/redis/SCARD/#streaming","text":"Streaming supported as Time Series and Data frame .","title":"Streaming"},{"location":"redis-datasource/redis/SCARD/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis/SLOWLOG/","text":"SLOWLOG \u00b6 This command is used in order to read and reset the Redis slow queries log. Redis Core https://redis.io/commands/SLOWLOG SLOWLOG GET \u00b6 Returns the Redis slow queries log. Parameters \u00b6 Parameter Description Size Number of rows to return. Default value is 10 Streaming \u00b6 Streaming supported as Data frame . Visualization \u00b6 Table","title":"SLOWLOG"},{"location":"redis-datasource/redis/SLOWLOG/#slowlog","text":"This command is used in order to read and reset the Redis slow queries log. Redis Core https://redis.io/commands/SLOWLOG","title":"SLOWLOG"},{"location":"redis-datasource/redis/SLOWLOG/#slowlog-get","text":"Returns the Redis slow queries log.","title":"SLOWLOG GET"},{"location":"redis-datasource/redis/SLOWLOG/#parameters","text":"Parameter Description Size Number of rows to return. Default value is 10","title":"Parameters"},{"location":"redis-datasource/redis/SLOWLOG/#streaming","text":"Streaming supported as Data frame .","title":"Streaming"},{"location":"redis-datasource/redis/SLOWLOG/#visualization","text":"Table","title":"Visualization"},{"location":"redis-datasource/redis/SMEMBERS/","text":"SMEMBERS \u00b6 This command returns all the members of the set stored at key. Redis Core https://redis.io/commands/SMEMBERS Parameters \u00b6 Parameter Description Key Key name Streaming \u00b6 Streaming supported as Data frame . Visualization \u00b6 Table","title":"SMEMBERS"},{"location":"redis-datasource/redis/SMEMBERS/#smembers","text":"This command returns all the members of the set stored at key. Redis Core https://redis.io/commands/SMEMBERS","title":"SMEMBERS"},{"location":"redis-datasource/redis/SMEMBERS/#parameters","text":"Parameter Description Key Key name","title":"Parameters"},{"location":"redis-datasource/redis/SMEMBERS/#streaming","text":"Streaming supported as Data frame .","title":"Streaming"},{"location":"redis-datasource/redis/SMEMBERS/#visualization","text":"Table","title":"Visualization"},{"location":"redis-datasource/redis/TTL/","text":"TTL \u00b6 This command returns the remaining time to live of a key that has a timeout. Redis Core https://redis.io/commands/TTL Parameters \u00b6 Parameter Description Key Key name Streaming \u00b6 Streaming supported as Time Series and Data frame . Visualization \u00b6 Any standard visualization should work. The Clock is Ticking TTL can be used to display countdown until the event.","title":"TTL"},{"location":"redis-datasource/redis/TTL/#ttl","text":"This command returns the remaining time to live of a key that has a timeout. Redis Core https://redis.io/commands/TTL","title":"TTL"},{"location":"redis-datasource/redis/TTL/#parameters","text":"Parameter Description Key Key name","title":"Parameters"},{"location":"redis-datasource/redis/TTL/#streaming","text":"Streaming supported as Time Series and Data frame .","title":"Streaming"},{"location":"redis-datasource/redis/TTL/#visualization","text":"Any standard visualization should work. The Clock is Ticking TTL can be used to display countdown until the event.","title":"Visualization"},{"location":"redis-datasource/redis/TYPE/","text":"TYPE \u00b6 This command returns the string representation of the type of the value stored at key. Redis Core https://redis.io/commands/TYPE Parameters \u00b6 Parameter Description Key Key name Streaming \u00b6 N/A. Visualization \u00b6 Any standard visualization should work.","title":"TYPE"},{"location":"redis-datasource/redis/TYPE/#type","text":"This command returns the string representation of the type of the value stored at key. Redis Core https://redis.io/commands/TYPE","title":"TYPE"},{"location":"redis-datasource/redis/TYPE/#parameters","text":"Parameter Description Key Key name","title":"Parameters"},{"location":"redis-datasource/redis/TYPE/#streaming","text":"N/A.","title":"Streaming"},{"location":"redis-datasource/redis/TYPE/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis/XINFO/","text":"XINFO \u00b6 This is introspection command used in order to retrieve different information about the streams and associated consumer groups. Redis Core https://redis.io/commands/XINFO XINFO STREAM \u00b6 Returns general information about the stream stored at the specified key. Parameters \u00b6 Parameter Description Key Key name Streaming \u00b6 Streaming supported as Time Series and Data frame . Visualization \u00b6 Any standard visualization should work.","title":"XINFO"},{"location":"redis-datasource/redis/XINFO/#xinfo","text":"This is introspection command used in order to retrieve different information about the streams and associated consumer groups. Redis Core https://redis.io/commands/XINFO","title":"XINFO"},{"location":"redis-datasource/redis/XINFO/#xinfo-stream","text":"Returns general information about the stream stored at the specified key.","title":"XINFO STREAM"},{"location":"redis-datasource/redis/XINFO/#parameters","text":"Parameter Description Key Key name","title":"Parameters"},{"location":"redis-datasource/redis/XINFO/#streaming","text":"Streaming supported as Time Series and Data frame .","title":"Streaming"},{"location":"redis-datasource/redis/XINFO/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis/XLEN/","text":"XLEN \u00b6 This command returns the number of entries inside a stream. Redis Core https://redis.io/commands/XLEN Parameters \u00b6 Parameter Description Key Key name Streaming \u00b6 Streaming supported as Time Series and Data frame . Visualization \u00b6 Any standard visualization should work.","title":"XLEN"},{"location":"redis-datasource/redis/XLEN/#xlen","text":"This command returns the number of entries inside a stream. Redis Core https://redis.io/commands/XLEN","title":"XLEN"},{"location":"redis-datasource/redis/XLEN/#parameters","text":"Parameter Description Key Key name","title":"Parameters"},{"location":"redis-datasource/redis/XLEN/#streaming","text":"Streaming supported as Time Series and Data frame .","title":"Streaming"},{"location":"redis-datasource/redis/XLEN/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis/XRANGE/","text":"XRANGE \u00b6 This command returns the stream entries matching a given range of IDs. Redis Core https://redis.io/commands/XRANGE $time Column $time was added in Redis Data Source 1.4.0 based on the $streamId. Parameters \u00b6 Parameter Description Default Key Key name Start Range start - (minimum) End Range end + (maximum) Count Number of entries Streaming \u00b6 Streaming supported as Data frame . Time series Streaming as Time series will return only the last line. Visualization \u00b6 Any standard visualization should work.","title":"XRANGE"},{"location":"redis-datasource/redis/XRANGE/#xrange","text":"This command returns the stream entries matching a given range of IDs. Redis Core https://redis.io/commands/XRANGE $time Column $time was added in Redis Data Source 1.4.0 based on the $streamId.","title":"XRANGE"},{"location":"redis-datasource/redis/XRANGE/#parameters","text":"Parameter Description Default Key Key name Start Range start - (minimum) End Range end + (maximum) Count Number of entries","title":"Parameters"},{"location":"redis-datasource/redis/XRANGE/#streaming","text":"Streaming supported as Data frame . Time series Streaming as Time series will return only the last line.","title":"Streaming"},{"location":"redis-datasource/redis/XRANGE/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis/XREVRANGE/","text":"XREVRANGE \u00b6 This command returns the stream entries matching a given range of IDs in reverse order. Redis Core https://redis.io/commands/XREVRANGE $time Column $time was added in Redis Data Source 1.4.0 based on the $streamId. Parameters \u00b6 Parameter Description Default Key Key name End Range end + (maximum) Start Range start - (minimum) Count Number of entries Streaming \u00b6 Streaming supported as Data frame . Time series Streaming as Time series will return only the last line. Visualization \u00b6 Any standard visualization should work.","title":"XREVRANGE"},{"location":"redis-datasource/redis/XREVRANGE/#xrevrange","text":"This command returns the stream entries matching a given range of IDs in reverse order. Redis Core https://redis.io/commands/XREVRANGE $time Column $time was added in Redis Data Source 1.4.0 based on the $streamId.","title":"XREVRANGE"},{"location":"redis-datasource/redis/XREVRANGE/#parameters","text":"Parameter Description Default Key Key name End Range end + (maximum) Start Range start - (minimum) Count Number of entries","title":"Parameters"},{"location":"redis-datasource/redis/XREVRANGE/#streaming","text":"Streaming supported as Data frame . Time series Streaming as Time series will return only the last line.","title":"Streaming"},{"location":"redis-datasource/redis/XREVRANGE/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis-gears/RG-DUMPREGISTRATIONS/","text":"RG.DUMPREGISTRATIONS \u00b6 This command outputs the list of function registrations. The representation of an event-driven function is called a registration . RedisGears https://oss.redislabs.com/redisgears/commands.html#rgdumpregistrations Parameters \u00b6 No parameters is required. Streaming \u00b6 Streaming supported as Data frame . Visualization \u00b6 Table Dashboards \u00b6 RedisGears includes Table panel Registrations using this command.","title":"RG.DUMPREGISTRATIONS"},{"location":"redis-datasource/redis-gears/RG-DUMPREGISTRATIONS/#rgdumpregistrations","text":"This command outputs the list of function registrations. The representation of an event-driven function is called a registration . RedisGears https://oss.redislabs.com/redisgears/commands.html#rgdumpregistrations","title":"RG.DUMPREGISTRATIONS"},{"location":"redis-datasource/redis-gears/RG-DUMPREGISTRATIONS/#parameters","text":"No parameters is required.","title":"Parameters"},{"location":"redis-datasource/redis-gears/RG-DUMPREGISTRATIONS/#streaming","text":"Streaming supported as Data frame .","title":"Streaming"},{"location":"redis-datasource/redis-gears/RG-DUMPREGISTRATIONS/#visualization","text":"Table","title":"Visualization"},{"location":"redis-datasource/redis-gears/RG-DUMPREGISTRATIONS/#dashboards","text":"RedisGears includes Table panel Registrations using this command.","title":"Dashboards"},{"location":"redis-datasource/redis-gears/RG-PYDUMPREQS/","text":"RG.PYDUMPREQS \u00b6 This command returns a list of all the python requirements available (with information about each requirement). RedisGears https://oss.redislabs.com/redisgears/commands.html#rgpydumpreqs Parameters \u00b6 No parameters is required. Streaming \u00b6 Streaming supported as Data frame . Visualization \u00b6 Table Dashboards \u00b6 RedisGears includes Table panel Available Requirements using this command.","title":"RG.PYDUMPREQS"},{"location":"redis-datasource/redis-gears/RG-PYDUMPREQS/#rgpydumpreqs","text":"This command returns a list of all the python requirements available (with information about each requirement). RedisGears https://oss.redislabs.com/redisgears/commands.html#rgpydumpreqs","title":"RG.PYDUMPREQS"},{"location":"redis-datasource/redis-gears/RG-PYDUMPREQS/#parameters","text":"No parameters is required.","title":"Parameters"},{"location":"redis-datasource/redis-gears/RG-PYDUMPREQS/#streaming","text":"Streaming supported as Data frame .","title":"Streaming"},{"location":"redis-datasource/redis-gears/RG-PYDUMPREQS/#visualization","text":"Table","title":"Visualization"},{"location":"redis-datasource/redis-gears/RG-PYDUMPREQS/#dashboards","text":"RedisGears includes Table panel Available Requirements using this command.","title":"Dashboards"},{"location":"redis-datasource/redis-gears/RG-PYEXECUTE/","text":"RG.PYEXECUTE \u00b6 This command executes a Python function. A RedisGears function is a formal description of the processing steps in the data flow. RedisGears https://oss.redislabs.com/redisgears/commands.html#rgpyexecute Parameters \u00b6 Parameter Description Function Python function Unblocking Doesn't block the client during execution Requirements Ensures that list of dependencies it is given as an argument is installed on each shard before execution Streaming \u00b6 Streaming is not supported. Visualization \u00b6 This command is not available in Query Editor and can be used only using RedisGears Script Editor panel. Dashboards \u00b6 RedisGears includes RedisGears Script Editor panel Python function using this command.","title":"RG.PYEXECUTE"},{"location":"redis-datasource/redis-gears/RG-PYEXECUTE/#rgpyexecute","text":"This command executes a Python function. A RedisGears function is a formal description of the processing steps in the data flow. RedisGears https://oss.redislabs.com/redisgears/commands.html#rgpyexecute","title":"RG.PYEXECUTE"},{"location":"redis-datasource/redis-gears/RG-PYEXECUTE/#parameters","text":"Parameter Description Function Python function Unblocking Doesn't block the client during execution Requirements Ensures that list of dependencies it is given as an argument is installed on each shard before execution","title":"Parameters"},{"location":"redis-datasource/redis-gears/RG-PYEXECUTE/#streaming","text":"Streaming is not supported.","title":"Streaming"},{"location":"redis-datasource/redis-gears/RG-PYEXECUTE/#visualization","text":"This command is not available in Query Editor and can be used only using RedisGears Script Editor panel.","title":"Visualization"},{"location":"redis-datasource/redis-gears/RG-PYEXECUTE/#dashboards","text":"RedisGears includes RedisGears Script Editor panel Python function using this command.","title":"Dashboards"},{"location":"redis-datasource/redis-gears/RG-PYSTATS/","text":"RG.PYSTATS \u00b6 This command returns memory usage statistics from the Python interpreter. RedisGears embeds a Python version 3.7.2+ interpreter . RedisGears https://oss.redislabs.com/redisgears/commands.html#rgpystats Parameters \u00b6 No parameters is required. Streaming \u00b6 Streaming supported as Time Series and Data frame . Visualization \u00b6 Any standard visualization should work. Dashboards \u00b6 RedisGears includes Graph panel Memory Usage using this command.","title":"RG.PYSTATS"},{"location":"redis-datasource/redis-gears/RG-PYSTATS/#rgpystats","text":"This command returns memory usage statistics from the Python interpreter. RedisGears embeds a Python version 3.7.2+ interpreter . RedisGears https://oss.redislabs.com/redisgears/commands.html#rgpystats","title":"RG.PYSTATS"},{"location":"redis-datasource/redis-gears/RG-PYSTATS/#parameters","text":"No parameters is required.","title":"Parameters"},{"location":"redis-datasource/redis-gears/RG-PYSTATS/#streaming","text":"Streaming supported as Time Series and Data frame .","title":"Streaming"},{"location":"redis-datasource/redis-gears/RG-PYSTATS/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis-gears/RG-PYSTATS/#dashboards","text":"RedisGears includes Graph panel Memory Usage using this command.","title":"Dashboards"},{"location":"redis-datasource/redis-graph/GRAPH-QUERY/","text":"GRAPH.QUERY \u00b6 This command executes the given query against a specified graph. RedisGraph https://oss.redislabs.com/redisgraph/commands/#graphquery Parameters \u00b6 Parameter Description Key Key name Cypher The syntax is based on Cypher , and only a subset of the language currently supported Streaming \u00b6 Streaming supported as Data frame . Visualization \u00b6 Node Graph (Grafana 7.4+)","title":"GRAPH.QUERY"},{"location":"redis-datasource/redis-graph/GRAPH-QUERY/#graphquery","text":"This command executes the given query against a specified graph. RedisGraph https://oss.redislabs.com/redisgraph/commands/#graphquery","title":"GRAPH.QUERY"},{"location":"redis-datasource/redis-graph/GRAPH-QUERY/#parameters","text":"Parameter Description Key Key name Cypher The syntax is based on Cypher , and only a subset of the language currently supported","title":"Parameters"},{"location":"redis-datasource/redis-graph/GRAPH-QUERY/#streaming","text":"Streaming supported as Data frame .","title":"Streaming"},{"location":"redis-datasource/redis-graph/GRAPH-QUERY/#visualization","text":"Node Graph (Grafana 7.4+)","title":"Visualization"},{"location":"redis-datasource/redis-graph/GRAPH-SLOWLOG/","text":"GRAPH.SLOWLOG \u00b6 This command returns a list containing up to 10 of the slowest queries issued against the given graph ID. RedisGraph https://oss.redislabs.com/redisgraph/commands/#graphslowlog Parameters \u00b6 No parameters is required. Streaming \u00b6 Streaming supported as Data frame . Visualization \u00b6 Table","title":"GRAPH.SLOWLOG"},{"location":"redis-datasource/redis-graph/GRAPH-SLOWLOG/#graphslowlog","text":"This command returns a list containing up to 10 of the slowest queries issued against the given graph ID. RedisGraph https://oss.redislabs.com/redisgraph/commands/#graphslowlog","title":"GRAPH.SLOWLOG"},{"location":"redis-datasource/redis-graph/GRAPH-SLOWLOG/#parameters","text":"No parameters is required.","title":"Parameters"},{"location":"redis-datasource/redis-graph/GRAPH-SLOWLOG/#streaming","text":"Streaming supported as Data frame .","title":"Streaming"},{"location":"redis-datasource/redis-graph/GRAPH-SLOWLOG/#visualization","text":"Table","title":"Visualization"},{"location":"redis-datasource/redis-search/FT-INFO/","text":"FT.INFO \u00b6 This command returns information and statistics on the index. RediSearch https://oss.redislabs.com/redisearch/1.6/Commands/#ftinfo Parameters \u00b6 Parameter Description Key Index Streaming \u00b6 Streaming supported as Time Series and Data frame . Visualization \u00b6 Any standard visualization should work.","title":"FT.INFO"},{"location":"redis-datasource/redis-search/FT-INFO/#ftinfo","text":"This command returns information and statistics on the index. RediSearch https://oss.redislabs.com/redisearch/1.6/Commands/#ftinfo","title":"FT.INFO"},{"location":"redis-datasource/redis-search/FT-INFO/#parameters","text":"Parameter Description Key Index","title":"Parameters"},{"location":"redis-datasource/redis-search/FT-INFO/#streaming","text":"Streaming supported as Time Series and Data frame .","title":"Streaming"},{"location":"redis-datasource/redis-search/FT-INFO/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis-timeseries/TS-GET/","text":"TS.GET \u00b6 This command returns the last sample. RedisTimeSeries https://oss.redislabs.com/redistimeseries/commands/#tsget Parameters \u00b6 Parameter Description Key Key name Streaming \u00b6 Streaming supported as Time Series and Data frame . Visualization \u00b6 Any standard visualization should work.","title":"TS.GET"},{"location":"redis-datasource/redis-timeseries/TS-GET/#tsget","text":"This command returns the last sample. RedisTimeSeries https://oss.redislabs.com/redistimeseries/commands/#tsget","title":"TS.GET"},{"location":"redis-datasource/redis-timeseries/TS-GET/#parameters","text":"Parameter Description Key Key name","title":"Parameters"},{"location":"redis-datasource/redis-timeseries/TS-GET/#streaming","text":"Streaming supported as Time Series and Data frame .","title":"Streaming"},{"location":"redis-datasource/redis-timeseries/TS-GET/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis-timeseries/TS-INFO/","text":"TS.INFO \u00b6 This command returns information and statistics on the time series. RedisTimeSeries https://oss.redislabs.com/redistimeseries/commands/#tsinfo Parameters \u00b6 Parameter Description Key Key name Streaming \u00b6 Streaming supported as Time Series and Data frame . Visualization \u00b6 Any standard visualization should work.","title":"TS.INFO"},{"location":"redis-datasource/redis-timeseries/TS-INFO/#tsinfo","text":"This command returns information and statistics on the time series. RedisTimeSeries https://oss.redislabs.com/redistimeseries/commands/#tsinfo","title":"TS.INFO"},{"location":"redis-datasource/redis-timeseries/TS-INFO/#parameters","text":"Parameter Description Key Key name","title":"Parameters"},{"location":"redis-datasource/redis-timeseries/TS-INFO/#streaming","text":"Streaming supported as Time Series and Data frame .","title":"Streaming"},{"location":"redis-datasource/redis-timeseries/TS-INFO/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis-timeseries/TS-MRANGE/","text":"TS.MRANGE \u00b6 This command query a timestamp range across multiple time series by a filter. RedisTimeSeries https://oss.redislabs.com/redistimeseries/commands/#tsmrangetsmrevrange Parameters \u00b6 Parameter Description Key Key name Label Filter Filters . A minimum of one l=v filter must be applied Legend Label Label for Frame's name. Will be displayed for two or more Time-series. Value Label Label for Serie's name. Will be displayed in the legend Aggregation Aggregation type Time Bucket (Aggregation enabled) Time bucket for Aggregation in milliseconds Fill Missing (Aggregation enabled) If checked, the data source will fill missing intervals Labels If Legend Label is not provided, series will have all labels returned. Labels can be Transformed if required. Aggregation \u00b6 Type Description None (default) No aggregation Avg Average Count Count number of samples Max Maximum Min Minimum Range Diff between maximum and minimum in the bucket Sum Summation Streaming \u00b6 Streaming supported as Time Series and Data frame . Value Label Provide the Value Label to merge streaming results. Visualization \u00b6 Any standard visualization should work.","title":"TS.MRANGE"},{"location":"redis-datasource/redis-timeseries/TS-MRANGE/#tsmrange","text":"This command query a timestamp range across multiple time series by a filter. RedisTimeSeries https://oss.redislabs.com/redistimeseries/commands/#tsmrangetsmrevrange","title":"TS.MRANGE"},{"location":"redis-datasource/redis-timeseries/TS-MRANGE/#parameters","text":"Parameter Description Key Key name Label Filter Filters . A minimum of one l=v filter must be applied Legend Label Label for Frame's name. Will be displayed for two or more Time-series. Value Label Label for Serie's name. Will be displayed in the legend Aggregation Aggregation type Time Bucket (Aggregation enabled) Time bucket for Aggregation in milliseconds Fill Missing (Aggregation enabled) If checked, the data source will fill missing intervals Labels If Legend Label is not provided, series will have all labels returned. Labels can be Transformed if required.","title":"Parameters"},{"location":"redis-datasource/redis-timeseries/TS-MRANGE/#aggregation","text":"Type Description None (default) No aggregation Avg Average Count Count number of samples Max Maximum Min Minimum Range Diff between maximum and minimum in the bucket Sum Summation","title":"Aggregation"},{"location":"redis-datasource/redis-timeseries/TS-MRANGE/#streaming","text":"Streaming supported as Time Series and Data frame . Value Label Provide the Value Label to merge streaming results.","title":"Streaming"},{"location":"redis-datasource/redis-timeseries/TS-MRANGE/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-datasource/redis-timeseries/TS-QUERYINDEX/","text":"TS.QUERYINDEX \u00b6 This command query all the keys matching the filter list. RedisTimeSeries https://oss.redislabs.com/redistimeseries/commands/#tsqueryindex Parameters \u00b6 Parameter Description Label Filter Filters . A minimum of one l=v filter must be applied Streaming \u00b6 Streaming supported as Data frame . Visualization \u00b6 Table","title":"TS.QUERYINDEX"},{"location":"redis-datasource/redis-timeseries/TS-QUERYINDEX/#tsqueryindex","text":"This command query all the keys matching the filter list. RedisTimeSeries https://oss.redislabs.com/redistimeseries/commands/#tsqueryindex","title":"TS.QUERYINDEX"},{"location":"redis-datasource/redis-timeseries/TS-QUERYINDEX/#parameters","text":"Parameter Description Label Filter Filters . A minimum of one l=v filter must be applied","title":"Parameters"},{"location":"redis-datasource/redis-timeseries/TS-QUERYINDEX/#streaming","text":"Streaming supported as Data frame .","title":"Streaming"},{"location":"redis-datasource/redis-timeseries/TS-QUERYINDEX/#visualization","text":"Table","title":"Visualization"},{"location":"redis-datasource/redis-timeseries/TS-RANGE/","text":"TS.RANGE \u00b6 This command query a range in a forward direction. RedisTimeSeries https://oss.redislabs.com/redistimeseries/commands/#tsrangetsrevrange Parameters \u00b6 Parameter Description Key Key name Legend Frame's name. Displayed for two or more Queries Value Serie's name. Displayed in the legend Aggregation Aggregation type Time Bucket (Aggregation enabled) Time bucket for Aggregation in milliseconds Fill Missing (Aggregation enabled) If checked, the data source will fill missing intervals Aggregation \u00b6 Type Description None (default) No aggregation Avg Average Count Count number of samples Max Maximum Min Minimum Range Diff between maximum and minimum in the bucket Sum Summation Streaming \u00b6 Streaming supported as Time Series and Data frame . Value Provide the Value to merge streaming results. Visualization \u00b6 Any standard visualization should work.","title":"TS.RANGE"},{"location":"redis-datasource/redis-timeseries/TS-RANGE/#tsrange","text":"This command query a range in a forward direction. RedisTimeSeries https://oss.redislabs.com/redistimeseries/commands/#tsrangetsrevrange","title":"TS.RANGE"},{"location":"redis-datasource/redis-timeseries/TS-RANGE/#parameters","text":"Parameter Description Key Key name Legend Frame's name. Displayed for two or more Queries Value Serie's name. Displayed in the legend Aggregation Aggregation type Time Bucket (Aggregation enabled) Time bucket for Aggregation in milliseconds Fill Missing (Aggregation enabled) If checked, the data source will fill missing intervals","title":"Parameters"},{"location":"redis-datasource/redis-timeseries/TS-RANGE/#aggregation","text":"Type Description None (default) No aggregation Avg Average Count Count number of samples Max Maximum Min Minimum Range Diff between maximum and minimum in the bucket Sum Summation","title":"Aggregation"},{"location":"redis-datasource/redis-timeseries/TS-RANGE/#streaming","text":"Streaming supported as Time Series and Data frame . Value Provide the Value to merge streaming results.","title":"Streaming"},{"location":"redis-datasource/redis-timeseries/TS-RANGE/#visualization","text":"Any standard visualization should work.","title":"Visualization"},{"location":"redis-explorer/overview/","text":"Redis Explorer plug-in \u00b6 The Redis Explorer is a plug-in for Grafana that allows to connect to Redis Enterprise software clusters using REST API. It provides application pages to add Redis Data Sources for managed databases and dashboards to see cluster configuration. Features comparison \u00b6 Redis endpoint (open-source) Redis Enterprise Redis Data Source Stats , Streaming , Data Redis Application plug-in Dashboards , Custom Panels Redis Explorer plug-in Use Redis Data Source Metrics , Information Prometheus Redis Exporter for metrics Redis Enterprise metrics exporter Enable Plug-in \u00b6 The Redis Explorer plug-in is disabled after installation by default. To enable: Go to Configuration -> Plugins and choose Redis Explorer plug-in. Click Enable to add side menu, add Redis Enterprise software data source and import Dashboards. Home \u00b6 The Home page connects to every configured data source and retrieve cluster's name. Loading Time Page load can take a long time if clusters located far away from Grafana or data source can't connect (timeout). Add Redis Enterprise Software Data Source \u00b6 To add new data source click on Add Redis Enterprise Software button and configure data source providing connection details. Add Redis databases \u00b6 To add databases managed by Redis Enterprise cluster as Data Sources click on the Databases button. Dashboards \u00b6 Redis Explorer plug-in includes predefined dashboards: Enterprise Clusters Cluster Overview Cluster Nodes Cluster Databases Application Icon All dashboards are accessible from the Application's icon in the left side menu. Provisioning \u00b6 Grafana supports managing plugins in Grafana by adding one or more YAML config files in the provisioning/plugins directory: Each config file can contain a list of apps that will be updated during start up. Grafana updates each app to match the configuration file. apiVersion : 1 apps : - type : redis-explorer-app disabled : false","title":"Overview"},{"location":"redis-explorer/overview/#redis-explorer-plug-in","text":"The Redis Explorer is a plug-in for Grafana that allows to connect to Redis Enterprise software clusters using REST API. It provides application pages to add Redis Data Sources for managed databases and dashboards to see cluster configuration.","title":"Redis Explorer plug-in"},{"location":"redis-explorer/overview/#features-comparison","text":"Redis endpoint (open-source) Redis Enterprise Redis Data Source Stats , Streaming , Data Redis Application plug-in Dashboards , Custom Panels Redis Explorer plug-in Use Redis Data Source Metrics , Information Prometheus Redis Exporter for metrics Redis Enterprise metrics exporter","title":"Features comparison"},{"location":"redis-explorer/overview/#enable-plug-in","text":"The Redis Explorer plug-in is disabled after installation by default. To enable: Go to Configuration -> Plugins and choose Redis Explorer plug-in. Click Enable to add side menu, add Redis Enterprise software data source and import Dashboards.","title":"Enable Plug-in"},{"location":"redis-explorer/overview/#home","text":"The Home page connects to every configured data source and retrieve cluster's name. Loading Time Page load can take a long time if clusters located far away from Grafana or data source can't connect (timeout).","title":"Home"},{"location":"redis-explorer/overview/#add-redis-enterprise-software-data-source","text":"To add new data source click on Add Redis Enterprise Software button and configure data source providing connection details.","title":"Add Redis Enterprise Software Data Source"},{"location":"redis-explorer/overview/#add-redis-databases","text":"To add databases managed by Redis Enterprise cluster as Data Sources click on the Databases button.","title":"Add Redis databases"},{"location":"redis-explorer/overview/#dashboards","text":"Redis Explorer plug-in includes predefined dashboards: Enterprise Clusters Cluster Overview Cluster Nodes Cluster Databases Application Icon All dashboards are accessible from the Application's icon in the left side menu.","title":"Dashboards"},{"location":"redis-explorer/overview/#provisioning","text":"Grafana supports managing plugins in Grafana by adding one or more YAML config files in the provisioning/plugins directory: Each config file can contain a list of apps that will be updated during start up. Grafana updates each app to match the configuration file. apiVersion : 1 apps : - type : redis-explorer-app disabled : false","title":"Provisioning"},{"location":"redis-explorer/dashboards/databases/","text":"Cluster Databases \u00b6 Cluster Databases dashboard provides information and metrics for each databases managed by cluster. Panels \u00b6 Databases table Name, Used Memory, Ops/Sec, Latency and Network for each database","title":"Cluster Databases"},{"location":"redis-explorer/dashboards/databases/#cluster-databases","text":"Cluster Databases dashboard provides information and metrics for each databases managed by cluster.","title":"Cluster Databases"},{"location":"redis-explorer/dashboards/databases/#panels","text":"Databases table Name, Used Memory, Ops/Sec, Latency and Network for each database","title":"Panels"},{"location":"redis-explorer/dashboards/explorer/","text":"Enterprise Clusters \u00b6 Enterprise Clusters dashboard provides basic information about the cluster, license, and displays most important metrics. Panels \u00b6 Cluster's name License Expiration Average Latency Memory CPU","title":"Enterprise Clusters"},{"location":"redis-explorer/dashboards/explorer/#enterprise-clusters","text":"Enterprise Clusters dashboard provides basic information about the cluster, license, and displays most important metrics.","title":"Enterprise Clusters"},{"location":"redis-explorer/dashboards/explorer/#panels","text":"Cluster's name License Expiration Average Latency Memory CPU","title":"Panels"},{"location":"redis-explorer/dashboards/nodes/","text":"Cluster Nodes \u00b6 Cluster Nodes dashboard provides information and metrics for each node participating in the cluster. Panels \u00b6 Nodes table CPU, Memory and Network metrics for each node","title":"Cluster Nodes"},{"location":"redis-explorer/dashboards/nodes/#cluster-nodes","text":"Cluster Nodes dashboard provides information and metrics for each node participating in the cluster.","title":"Cluster Nodes"},{"location":"redis-explorer/dashboards/nodes/#panels","text":"Nodes table CPU, Memory and Network metrics for each node","title":"Panels"},{"location":"redis-explorer/dashboards/overview/","text":"Cluster Overview \u00b6 Cluster Overview dashboard provides the most important information and metrics for the selected cluster. Panels \u00b6 Cluster's name, when cluster was created and rack-zone awareness License Featurer, Expiration and Subscription Limit Average Latency Total Requests CPU Memory Network Users Modules Events Alerts for Databases and Nodes","title":"Cluster Overview"},{"location":"redis-explorer/dashboards/overview/#cluster-overview","text":"Cluster Overview dashboard provides the most important information and metrics for the selected cluster.","title":"Cluster Overview"},{"location":"redis-explorer/dashboards/overview/#panels","text":"Cluster's name, when cluster was created and rack-zone awareness License Featurer, Expiration and Subscription Limit Average Latency Total Requests CPU Memory Network Users Modules Events Alerts for Databases and Nodes","title":"Panels"},{"location":"redis-explorer/re-software/configuration/","text":"Configuration \u00b6 You can add as many data sources as you want to support multiple Redis Enterprise clusters. Cluster URL \u00b6 Specify host:port address to Redis Enterprise software REST API interface. Port 9443 is recommended to use for REST API traffic. User \u00b6 Username to authenticate. Ability to see metrics, configuration and logs depends on the role . Password \u00b6 Security Passwords are kept in the Grafana security database and not accessible to users. Password for the provided User . Skip Verify \u00b6 If checked, the server's certificate will not be checked for validity. Should be enabled for Self-Signed certificates.","title":"Configuration"},{"location":"redis-explorer/re-software/configuration/#configuration","text":"You can add as many data sources as you want to support multiple Redis Enterprise clusters.","title":"Configuration"},{"location":"redis-explorer/re-software/configuration/#cluster-url","text":"Specify host:port address to Redis Enterprise software REST API interface. Port 9443 is recommended to use for REST API traffic.","title":"Cluster URL"},{"location":"redis-explorer/re-software/configuration/#user","text":"Username to authenticate. Ability to see metrics, configuration and logs depends on the role .","title":"User"},{"location":"redis-explorer/re-software/configuration/#password","text":"Security Passwords are kept in the Grafana security database and not accessible to users. Password for the provided User .","title":"Password"},{"location":"redis-explorer/re-software/configuration/#skip-verify","text":"If checked, the server's certificate will not be checked for validity. Should be enabled for Self-Signed certificates.","title":"Skip Verify"},{"location":"redis-explorer/re-software/info/","text":"Redis Enterprise Software Information \u00b6 Redis Enterprise Software Data Source provides various information available in the REST API. Type Description Alerts Database and Nodes alerts Cluster Cluster information Cluster Logs Cluster events log Databases All databases or specific database information License License information Modules All modules or specific module information Nodes All nodes or specific node information Users All users or specific user information","title":"Information"},{"location":"redis-explorer/re-software/info/#redis-enterprise-software-information","text":"Redis Enterprise Software Data Source provides various information available in the REST API. Type Description Alerts Database and Nodes alerts Cluster Cluster information Cluster Logs Cluster events log Databases All databases or specific database information License License information Modules All modules or specific module information Nodes All nodes or specific node information Users All users or specific user information","title":"Redis Enterprise Software Information"},{"location":"redis-explorer/re-software/metrics/","text":"Redis Enterprise Software Metrics \u00b6 Redis Enterprise Software Data Source provides metrics available in the REST API. Cluster \u00b6 Metric name Unit Feature Description available_flash bytes Flash Sum of available flash in all nodes available_flash_no_overbooking bytes Flash Sum of available flash in all nodes without taking into account overbooking available_memory bytes Sum of available memory in all nodes available_memory_no_overbooking bytes Sum of available memory in all nodes without taking into account overbooking avg_latency micro-sec Average latency of requests handled by all cluster endpoints bigstore_free bytes Flash Sum of free space of back-end flash on all cluster nodes bigstore_iops ops/sec Flash Rate of i/o operations against back-end flash for all shards which are part of a flash based DB in cluster bigstore_kv_ops ops/sec Flash Rate of value read/write operations against back-end flash for all shards which are part of a flash based DB in cluster bigstore_throughput bytes/sec Flash Throughput i/o operations against back-end flash for all shards which are part of a flash based DB in cluster conns Total number of clients connected to all cluster endpoints cpu_idle 0-1 CPU idle time portion, the value is weighted between all nodes based on number of cores in each node cpu_iowait 0-1 CPU IOwait time portion cpu_irqs 0-1 CPU IRQs time portion cpu_nice 0-1 CPU Nice time portion cpu_steal 0-1 CPU Steal time portion cpu_system 0-1 CPU time portion spent in kernel on cluster, the value is weighted between all nodes based on number of cores in each node cpu_user 0-1 CPU time portion spent by users-pace processes on cluster, the value is weighted between all nodes based on number of cores in each node egress_bytes bytes/sec Sum of rate of outgoing network traffic on all cluster nodes ephemeral_storage_avail bytes Sum of disk space available to RLEC processes on configured ephemeral disk on all cluster nodes ephemeral_storage_free bytes Sum of free disk space on configured ephemeral disk on all cluster nodes free_memory bytes Sum of free memory in all cluster nodes ingress_bytes bytes/sec Sum of rate of incoming network traffic on all cluster nodes persistent_storage_avail bytes Sum of disk space available to cluster processes on configured persistent disk on all cluster nodes persistent_storage_free bytes Sum of free disk space on configured persistent disk on all cluster nodes provisional_flash bytes Flash Sum of provisional flash in all nodes provisional_flash_no_overbooking bytes Flash Sum of provisional flash in all nodes without taking into account overbooking provisional_memory bytes Sum of provisional memory in all nodes provisional_memory_no_overbooking bytes Sum of provisional memory in all nodes without taking into account overbooking total_req ops/sec Request rate handled by all endpoints on cluster Database \u00b6 Metric name Unit Feature Description avg_latency micro-sec Average latency of operations on the DB avg_other_latency micro-sec Average latency of other (non read/write) operations avg_read_latency micro-sec Average latency of read operations avg_write_latency micro-sec Average latency of write operations big_del_flash key access / sec Flash Rate of key deletes for keys that happen to be on flash big_del_ram key access / sec Flash Rate of key deletes for keys that happen to be in ram, this includes write misses (new keys created) big_fetch_flash key access / sec Flash Rate of key reads / updates for keys that happento be on flash big_fetch_ram key access / sec Flash Rate of key reads / updates for keys that happento be in RAM big_io_ratio_flash key access / sec Flash Rate of key operations on flash. can be used to compute ratio of io operations big_io_ratio_redis key access / sec Flash Rate of redis operations on keys. can be used to compute ratio of io operations big_write_flash key access / sec Flash Rate of key writes for keys that happen to be on flash big_write_ram key access / sec Flash Rate of key writes for keys that happen to be in RAM, this includes write misses (new keys created) bigstore_io_dels key access / sec Flash Rate of key deletions from flash bigstore_io_read_bytes bytes/sec Flash Throughput of i/o read operations against back-end flash for all shards of DB bigstore_io_reads key access / sec Flash Rate of key reads from flash bigstore_io_write_bytes bytes/sec Flash Throughput of i/o write operations against back-end flash for all shards of DB bigstore_io_writes key access / sec Flash Rate of key writes from flash bigstore_iops ops/sec Flash Rate of i/o operations against back-end flash for all shards of DB bigstore_kv_ops key access / sec Flash Rate of value read/write/del operations against back-end flash for all shards of DB bigstore_objs_flash Flash Value count on flash bigstore_objs_ram Flash Value count in RAM bigstore_throughput bytes/sec Flash Throughput of i/o operations against back-end flash for all shards of DB conns Number of client connections to DB\u2019s endpoints disk_frag_ratio Flash Flash fragmentation ratio (used / required) egress_bytes bytes/sec Rate of outgoing network traffic to DB\u2019s endpoint evicted_objects evictions/sec Rate of key evictions from DB expired_objects evictions/sec Rate keys expired in DB fork_cpu_system % cores utilization in system mode for all redis shard fork child processes of this database fork_cpu_user % cores utilization in user mode for all redis shard fork child processes of this database ingress_bytes bytes/sec Rate of incoming network traffic to DB\u2019s endpoint instantaneous_ops_per_sec ops/sec Request rate handled by all shards of DB last_req_time Last request time received to DB, when not available returns 1/1/1970 last_res_time Last response time received from DB, when not available returns 1/1/1970 main_thread_cpu_system % cores utilization in system mode for all redis shard main threads of this database main_thread_cpu_user % cores utilization in user mode for all redis shard main threads of this database mem_frag_ratio RAM fragmentation ratio (RSS / allocated RAM) mem_not_counted_for_evict bytes Portion of used_memory that\u2019s not counted for eviction and OOM error mem_size_lua bytes Redis lua scripting heap size monitor_sessions_count Number of client connected in monitor mode to the DB no_of_expires Number of volatile keys in the DB no_of_keys Number of keys in DB other_req ops/sec Rate of other (non read/write) requests on DB other_res ops/sec Rate of other (non read/write) responses on DB pubsub_channels Count the pub/sub channels with subscribed clients pubsub_patterns Count the pub/sub patterns with subscribed clients ram_overhead bytes Flash Non values RAM overhead read_hits ops/sec Rate of read operations accessing an existing key read_misses ops/sec Rate of read operations accessing a non-existing key read_req ops/sec Rate of read requests on DB read_res ops/sec Rate of read responses on DB shard_cpu_system % cores utilization in system mode for all redis shard processes of this database shard_cpu_user % cores utilization in user mode for the redis shard process total_connections_received connections/sec Rate of new client connections to DB total_req ops/sec Rate of all requests on DB total_res ops/sec Rate of all responses on DB used_bigstore bytes Flash Flash used by db used_memory bytes Memory used by db used_ram bytes Flash RAM used by db write_hits ops/sec Rate of write operations accessing an existing key write_misses ops/sec Rate of write operations accessing a non- existing key write_req ops/sec Rate of write requests on DB write_res ops/sec Rate of write responses on DB Node \u00b6 Metric name Unit Feature Description available_flash bytes Flash Available flash in node available_flash_no_overbooking bytes Flash Available flash in node without taking into account overbooking available_memory bytes Available ram in node available_memory_no_overbooking bytes Available ram in node without taking into account overbooking avg_latency micro-sec Average latency of requests handled by endpoints on node bigstore_free bytes Flash Free space of back-end flash (used by flash DB\u2019s bigstore_iops ops/sec Flash Rate of i/o operations against back-end flash for all shards which are part of a flash based DB on node bigstore_kv_ops ops/sec Flash Rate of value read/write operations against back-end flash for all shards which are part of a flash based DB on node bigstore_throughput bytes/sec Flash Throughput of i/o operations against back-end flash for all shards which are part of a flash based DB on node conns Number of clients connected to endpoints on node cpu_idle 0-1 CPU idle time portion cpu_iowait 0-1 CPU IOwait time portion cpu_irqs 0-1 CPU IRQs time portion cpu_nice 0-1 CPU Nice time portion cpu_steal 0-1 CPU Steal time portion cpu_system 0-1 CPU time portion spent in kernel cpu_user 0-1 CPU time portion spent by users-pace processes cur_aof_rewrites Number of aof rewrites that are currently performed by shards on this node egress_bytes bytes/sec Rate of outgoing network traffic to node ephemeral_storage_avail bytes Disk space available to RLEC processes on configured ephemeral disk ephemeral_storage_free bytes Free disk space on configured ephemeral disk free_memory bytes Free memory in node ingress_bytes bytes/sec Rate of incoming network traffic to node persistent_storage_avail bytes Disk space available to RLEC processes on configured persistent disk persistent_storage_free bytes Free disk space on configured persistent disk provisional_flash bytes Flash Amount of flash available for new shards on this node, taking into account overbooking, max redis servers, reserved flash and provision and migration thresholds provisional_flash_no_overbooking bytes Flash Amount of flash available for new shards on this node, max redis servers, reserved flash and provision and migration thresholds provisional_memory bytes Amount of ram available for new shards on this node, taking into account overbooking, max redis servers, reserved memory and provision and migration thresholds provisional_memory_no_overbooking bytes Amount of ram available for new shards on this node, max redis servers, reserved memory and provision and migration thresholds total_req ops/sec Request rate handled by endpoints on node","title":"Metrics"},{"location":"redis-explorer/re-software/metrics/#redis-enterprise-software-metrics","text":"Redis Enterprise Software Data Source provides metrics available in the REST API.","title":"Redis Enterprise Software Metrics"},{"location":"redis-explorer/re-software/metrics/#cluster","text":"Metric name Unit Feature Description available_flash bytes Flash Sum of available flash in all nodes available_flash_no_overbooking bytes Flash Sum of available flash in all nodes without taking into account overbooking available_memory bytes Sum of available memory in all nodes available_memory_no_overbooking bytes Sum of available memory in all nodes without taking into account overbooking avg_latency micro-sec Average latency of requests handled by all cluster endpoints bigstore_free bytes Flash Sum of free space of back-end flash on all cluster nodes bigstore_iops ops/sec Flash Rate of i/o operations against back-end flash for all shards which are part of a flash based DB in cluster bigstore_kv_ops ops/sec Flash Rate of value read/write operations against back-end flash for all shards which are part of a flash based DB in cluster bigstore_throughput bytes/sec Flash Throughput i/o operations against back-end flash for all shards which are part of a flash based DB in cluster conns Total number of clients connected to all cluster endpoints cpu_idle 0-1 CPU idle time portion, the value is weighted between all nodes based on number of cores in each node cpu_iowait 0-1 CPU IOwait time portion cpu_irqs 0-1 CPU IRQs time portion cpu_nice 0-1 CPU Nice time portion cpu_steal 0-1 CPU Steal time portion cpu_system 0-1 CPU time portion spent in kernel on cluster, the value is weighted between all nodes based on number of cores in each node cpu_user 0-1 CPU time portion spent by users-pace processes on cluster, the value is weighted between all nodes based on number of cores in each node egress_bytes bytes/sec Sum of rate of outgoing network traffic on all cluster nodes ephemeral_storage_avail bytes Sum of disk space available to RLEC processes on configured ephemeral disk on all cluster nodes ephemeral_storage_free bytes Sum of free disk space on configured ephemeral disk on all cluster nodes free_memory bytes Sum of free memory in all cluster nodes ingress_bytes bytes/sec Sum of rate of incoming network traffic on all cluster nodes persistent_storage_avail bytes Sum of disk space available to cluster processes on configured persistent disk on all cluster nodes persistent_storage_free bytes Sum of free disk space on configured persistent disk on all cluster nodes provisional_flash bytes Flash Sum of provisional flash in all nodes provisional_flash_no_overbooking bytes Flash Sum of provisional flash in all nodes without taking into account overbooking provisional_memory bytes Sum of provisional memory in all nodes provisional_memory_no_overbooking bytes Sum of provisional memory in all nodes without taking into account overbooking total_req ops/sec Request rate handled by all endpoints on cluster","title":"Cluster"},{"location":"redis-explorer/re-software/metrics/#database","text":"Metric name Unit Feature Description avg_latency micro-sec Average latency of operations on the DB avg_other_latency micro-sec Average latency of other (non read/write) operations avg_read_latency micro-sec Average latency of read operations avg_write_latency micro-sec Average latency of write operations big_del_flash key access / sec Flash Rate of key deletes for keys that happen to be on flash big_del_ram key access / sec Flash Rate of key deletes for keys that happen to be in ram, this includes write misses (new keys created) big_fetch_flash key access / sec Flash Rate of key reads / updates for keys that happento be on flash big_fetch_ram key access / sec Flash Rate of key reads / updates for keys that happento be in RAM big_io_ratio_flash key access / sec Flash Rate of key operations on flash. can be used to compute ratio of io operations big_io_ratio_redis key access / sec Flash Rate of redis operations on keys. can be used to compute ratio of io operations big_write_flash key access / sec Flash Rate of key writes for keys that happen to be on flash big_write_ram key access / sec Flash Rate of key writes for keys that happen to be in RAM, this includes write misses (new keys created) bigstore_io_dels key access / sec Flash Rate of key deletions from flash bigstore_io_read_bytes bytes/sec Flash Throughput of i/o read operations against back-end flash for all shards of DB bigstore_io_reads key access / sec Flash Rate of key reads from flash bigstore_io_write_bytes bytes/sec Flash Throughput of i/o write operations against back-end flash for all shards of DB bigstore_io_writes key access / sec Flash Rate of key writes from flash bigstore_iops ops/sec Flash Rate of i/o operations against back-end flash for all shards of DB bigstore_kv_ops key access / sec Flash Rate of value read/write/del operations against back-end flash for all shards of DB bigstore_objs_flash Flash Value count on flash bigstore_objs_ram Flash Value count in RAM bigstore_throughput bytes/sec Flash Throughput of i/o operations against back-end flash for all shards of DB conns Number of client connections to DB\u2019s endpoints disk_frag_ratio Flash Flash fragmentation ratio (used / required) egress_bytes bytes/sec Rate of outgoing network traffic to DB\u2019s endpoint evicted_objects evictions/sec Rate of key evictions from DB expired_objects evictions/sec Rate keys expired in DB fork_cpu_system % cores utilization in system mode for all redis shard fork child processes of this database fork_cpu_user % cores utilization in user mode for all redis shard fork child processes of this database ingress_bytes bytes/sec Rate of incoming network traffic to DB\u2019s endpoint instantaneous_ops_per_sec ops/sec Request rate handled by all shards of DB last_req_time Last request time received to DB, when not available returns 1/1/1970 last_res_time Last response time received from DB, when not available returns 1/1/1970 main_thread_cpu_system % cores utilization in system mode for all redis shard main threads of this database main_thread_cpu_user % cores utilization in user mode for all redis shard main threads of this database mem_frag_ratio RAM fragmentation ratio (RSS / allocated RAM) mem_not_counted_for_evict bytes Portion of used_memory that\u2019s not counted for eviction and OOM error mem_size_lua bytes Redis lua scripting heap size monitor_sessions_count Number of client connected in monitor mode to the DB no_of_expires Number of volatile keys in the DB no_of_keys Number of keys in DB other_req ops/sec Rate of other (non read/write) requests on DB other_res ops/sec Rate of other (non read/write) responses on DB pubsub_channels Count the pub/sub channels with subscribed clients pubsub_patterns Count the pub/sub patterns with subscribed clients ram_overhead bytes Flash Non values RAM overhead read_hits ops/sec Rate of read operations accessing an existing key read_misses ops/sec Rate of read operations accessing a non-existing key read_req ops/sec Rate of read requests on DB read_res ops/sec Rate of read responses on DB shard_cpu_system % cores utilization in system mode for all redis shard processes of this database shard_cpu_user % cores utilization in user mode for the redis shard process total_connections_received connections/sec Rate of new client connections to DB total_req ops/sec Rate of all requests on DB total_res ops/sec Rate of all responses on DB used_bigstore bytes Flash Flash used by db used_memory bytes Memory used by db used_ram bytes Flash RAM used by db write_hits ops/sec Rate of write operations accessing an existing key write_misses ops/sec Rate of write operations accessing a non- existing key write_req ops/sec Rate of write requests on DB write_res ops/sec Rate of write responses on DB","title":"Database"},{"location":"redis-explorer/re-software/metrics/#node","text":"Metric name Unit Feature Description available_flash bytes Flash Available flash in node available_flash_no_overbooking bytes Flash Available flash in node without taking into account overbooking available_memory bytes Available ram in node available_memory_no_overbooking bytes Available ram in node without taking into account overbooking avg_latency micro-sec Average latency of requests handled by endpoints on node bigstore_free bytes Flash Free space of back-end flash (used by flash DB\u2019s bigstore_iops ops/sec Flash Rate of i/o operations against back-end flash for all shards which are part of a flash based DB on node bigstore_kv_ops ops/sec Flash Rate of value read/write operations against back-end flash for all shards which are part of a flash based DB on node bigstore_throughput bytes/sec Flash Throughput of i/o operations against back-end flash for all shards which are part of a flash based DB on node conns Number of clients connected to endpoints on node cpu_idle 0-1 CPU idle time portion cpu_iowait 0-1 CPU IOwait time portion cpu_irqs 0-1 CPU IRQs time portion cpu_nice 0-1 CPU Nice time portion cpu_steal 0-1 CPU Steal time portion cpu_system 0-1 CPU time portion spent in kernel cpu_user 0-1 CPU time portion spent by users-pace processes cur_aof_rewrites Number of aof rewrites that are currently performed by shards on this node egress_bytes bytes/sec Rate of outgoing network traffic to node ephemeral_storage_avail bytes Disk space available to RLEC processes on configured ephemeral disk ephemeral_storage_free bytes Free disk space on configured ephemeral disk free_memory bytes Free memory in node ingress_bytes bytes/sec Rate of incoming network traffic to node persistent_storage_avail bytes Disk space available to RLEC processes on configured persistent disk persistent_storage_free bytes Free disk space on configured persistent disk provisional_flash bytes Flash Amount of flash available for new shards on this node, taking into account overbooking, max redis servers, reserved flash and provision and migration thresholds provisional_flash_no_overbooking bytes Flash Amount of flash available for new shards on this node, max redis servers, reserved flash and provision and migration thresholds provisional_memory bytes Amount of ram available for new shards on this node, taking into account overbooking, max redis servers, reserved memory and provision and migration thresholds provisional_memory_no_overbooking bytes Amount of ram available for new shards on this node, max redis servers, reserved memory and provision and migration thresholds total_req ops/sec Request rate handled by endpoints on node","title":"Node"},{"location":"redis-explorer/re-software/overview/","text":"Redis Enterprise Software Data Source \u00b6 Redis Enterprise Software Data Source allows to connect to Redis Enterprise software clusters using REST API. REST API Specification Redis Labs clusters are a set of nodes, typically two or more, providing database services. Clusters are inherently multi-tenant, and a single cluster can manage multiple databases accessed through individual endpoints. Configuration \u00b6 The Configuration page explains how to connect data source to Redis Enterprise software. Query Editor \u00b6 Choose Type to select Information (Alerts, Cluster, License, etc.) or Metrics Provide all required parameters, depends on selected Type Provisioning \u00b6 Grafana supports managing data sources by adding one or more YAML config files in the provisioning/datasources directory: Each config file can contain a list of datasources that will get added or updated during start up. If the data source already exists, then Grafana updates it to match the configuration file. apiVersion : 1 datasources : - name : Redis Enterprise type : redis-enterprise-software-datasource access : proxy orgId : 1 isDefault : true version : 1 url : redis://cluster.remote:9443 basicAuth : true basicAuthUser : re@localhost.io basicAuthPassword : 123 jsonData : host : \"https://cluster.remote:9443\" tlsSkipVerify : true secureJsonFields : basicAuthPassword : true editable : true","title":"Overview"},{"location":"redis-explorer/re-software/overview/#redis-enterprise-software-data-source","text":"Redis Enterprise Software Data Source allows to connect to Redis Enterprise software clusters using REST API. REST API Specification Redis Labs clusters are a set of nodes, typically two or more, providing database services. Clusters are inherently multi-tenant, and a single cluster can manage multiple databases accessed through individual endpoints.","title":"Redis Enterprise Software Data Source"},{"location":"redis-explorer/re-software/overview/#configuration","text":"The Configuration page explains how to connect data source to Redis Enterprise software.","title":"Configuration"},{"location":"redis-explorer/re-software/overview/#query-editor","text":"Choose Type to select Information (Alerts, Cluster, License, etc.) or Metrics Provide all required parameters, depends on selected Type","title":"Query Editor"},{"location":"redis-explorer/re-software/overview/#provisioning","text":"Grafana supports managing data sources by adding one or more YAML config files in the provisioning/datasources directory: Each config file can contain a list of datasources that will get added or updated during start up. If the data source already exists, then Grafana updates it to match the configuration file. apiVersion : 1 datasources : - name : Redis Enterprise type : redis-enterprise-software-datasource access : proxy orgId : 1 isDefault : true version : 1 url : redis://cluster.remote:9443 basicAuth : true basicAuthUser : re@localhost.io basicAuthPassword : 123 jsonData : host : \"https://cluster.remote:9443\" tlsSkipVerify : true secureJsonFields : basicAuthPassword : true editable : true","title":"Provisioning"}]}